[
    {
        "id": "b49b90bb.306d1",
        "type": "tab",
        "label": "config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "21dad95f.8d08de",
        "type": "tab",
        "label": "hat",
        "disabled": false,
        "info": ""
    },
    {
        "id": "95c0351f.c8f748",
        "type": "tab",
        "label": "cron",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5a09a613.e0de8",
        "type": "tab",
        "label": "hub",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e74f2b92.a31178",
        "type": "tab",
        "label": "serve",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8f5b891c.995788",
        "type": "tab",
        "label": "hue",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d7018fa3.0ba5c8",
        "type": "tab",
        "label": "bot",
        "disabled": false,
        "info": ""
    },
    {
        "id": "186d6189.93a90e",
        "type": "subflow",
        "name": "mem-info",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "ee243d7f.32724"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 760,
                "y": 200,
                "wires": [
                    {
                        "id": "fb43cf17.30886",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "6b7921f0.fcfa08",
        "type": "subflow",
        "name": "hue-bridge",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "aca83b64.9815b8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 180,
                "wires": [
                    {
                        "id": "bf9df606.f67268",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b2184ca7.59e64",
        "type": "subflow",
        "name": "Log.info",
        "info": "",
        "in": [
            {
                "x": 41,
                "y": 85,
                "wires": [
                    {
                        "id": "1e1e7701.c4f781"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "3ba9ed27.5b9922",
        "type": "websocket-listener",
        "path": "/ws/hub",
        "wholemsg": "false"
    },
    {
        "id": "29411507.7decc2",
        "type": "mqtt-broker",
        "name": "local",
        "broker": "localhost",
        "port": "1883",
        "clientid": "pi-hub",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": false,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "69c4d57b.c5a4ec",
        "type": "redis-config",
        "name": "local",
        "options": "{}",
        "cluster": false,
        "optionsType": "json"
    },
    {
        "id": "14f26699.674e91",
        "type": "hue-bridge",
        "name": "Hue bridge",
        "bridge": "192.168.1.7",
        "key": "sEqep3h1AbKJ986nyxqNzAmssGU2-IwaQSsEWREG",
        "interval": "2000",
        "disableupdates": false
    },
    {
        "id": "a5100c3d.f0a338",
        "type": "rpi-sensehat in",
        "z": "21dad95f.8d08de",
        "name": "temp-in",
        "motion": false,
        "env": true,
        "stick": false,
        "x": 110,
        "y": 160,
        "wires": [
            [
                "c5469e1a.ec75e8"
            ]
        ]
    },
    {
        "id": "e215258c.756eb",
        "type": "rpi-sensehat in",
        "z": "21dad95f.8d08de",
        "name": "stick-in",
        "motion": false,
        "env": false,
        "stick": true,
        "x": 110,
        "y": 280,
        "wires": [
            [
                "8ac1edae.d1a138",
                "1754f714.8f8a09"
            ]
        ]
    },
    {
        "id": "c66626d6.708d2",
        "type": "rpi-sensehat in",
        "z": "21dad95f.8d08de",
        "name": "motion-in",
        "motion": true,
        "env": false,
        "stick": false,
        "x": 120,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "8ac1edae.d1a138",
        "type": "debug",
        "z": "21dad95f.8d08de",
        "name": "stick-in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 280,
        "y": 260,
        "wires": []
    },
    {
        "id": "c5469e1a.ec75e8",
        "type": "delay",
        "z": "21dad95f.8d08de",
        "name": "1-per-2-sec",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "10dfb77f.4a3229"
            ]
        ]
    },
    {
        "id": "43fbfb1d.0665ec",
        "type": "debug",
        "z": "21dad95f.8d08de",
        "name": "temp-in",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "10dfb77f.4a3229",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "save-glob",
        "func": "\n// Higher - less to substract --> higher temp\nvar FACTOR = 0.77;\n\n// ## flow\nvar mem = global.get('mem') || {};\nvar prevTemp = global.get('temp') || {};\n\nvar date = new Date();\n\nvar temp = msg.payload;\ntemp.ts = date.toISOString();\nvar prev = prevTemp.cal || 0;\n\nvar cpu = mem.cputemp || 0;\nvar diff = cpu - temp.temperature;\nvar cal = temp.temperature - (diff/FACTOR);\n//node.warn('DEBUG - prev = ' + prev + ' | cal = ' + cal);\n\n// smooth transition\nvar change = 0;\nif( cal !== prev ){\n    var diffCalc = Math.abs(cal - prev);\n    var step = ( diffCalc < 3 ) ? 0.2 : diffCalc;\n    \n    change = ( cal > prev ) ? step : -step;\n}\n\ntemp.cal = Math.round((prev + change) * 10) / 10;\n\nglobal.set('temp', temp);\nmsg.payload = temp;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 160,
        "wires": [
            [
                "43fbfb1d.0665ec",
                "c99b154a.f7f048",
                "c72e9905.1bf288"
            ]
        ]
    },
    {
        "id": "c9054a1d.dce73",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "10 sec interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "99c16a01.88ebb"
            ]
        ]
    },
    {
        "id": "ee243d7f.32724",
        "type": "exec",
        "z": "186d6189.93a90e",
        "command": "/opt/vc/bin/vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "cpu_temp",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "2e5a5672.62bce2"
            ],
            [],
            []
        ]
    },
    {
        "id": "2e5a5672.62bce2",
        "type": "function",
        "z": "186d6189.93a90e",
        "name": "fmt-cpu",
        "func": "\nvar dev = global.get('device');\n\nvar newDate = new Date();\nvar cputemp = \n    msg.payload.replace ( /[^\\d.]/g, '' );\n\nmsg.bag = {\n    id: dev.id,\n    cputemp: parseFloat(cputemp),\n    time: newDate\n};\nmsg.payload = '';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 252.99998474121094,
        "y": 104,
        "wires": [
            [
                "8170e6ce.bbbf3"
            ]
        ]
    },
    {
        "id": "8170e6ce.bbbf3",
        "type": "exec",
        "z": "186d6189.93a90e",
        "command": "free -k",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "ram-use",
        "x": 360,
        "y": 200,
        "wires": [
            [
                "199137d9.e55ca"
            ],
            [],
            []
        ]
    },
    {
        "id": "199137d9.e55ca",
        "type": "function",
        "z": "186d6189.93a90e",
        "name": "fmt-ram",
        "func": "//normal is 40 and below\n//40-60 warning\n//60-80 Red alert\n\nvar mymatch = msg.payload.match(/\\d+/g);\n\n//node.warn('ram nums = ' + JSON.stringify(mymatch));\n\nvar ramtotal = parseInt(mymatch[0]);\nvar ramused = parseInt(mymatch[1]);\nvar ramfree = parseInt(mymatch[5]);\n\nmsg.bag.ram = {\n  total: ramtotal,\n  used: ramused,\n  p: Math.round(ramused / ramtotal * 100) + '%'\n};\n    \n//msg.payload = JSON.stringify(msg.bag);\nmsg.payload = '';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 100,
        "wires": [
            [
                "c893dd.bde8fc2"
            ]
        ]
    },
    {
        "id": "c893dd.bde8fc2",
        "type": "exec",
        "z": "186d6189.93a90e",
        "command": "df -m",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Space",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "fb43cf17.30886"
            ],
            [],
            []
        ]
    },
    {
        "id": "fb43cf17.30886",
        "type": "function",
        "z": "186d6189.93a90e",
        "name": "fmt-disk",
        "func": "//Get output into rows\nvar arr = msg.payload.split(\"\\n\");\n//Filter rows\nvar mymatch = arr.filter(function(line){\n    return line.match(/(\\/dev\\/root|\\/mnt\\/mydrive)/);\n});\n//split into cells\nvar rows = [];\nfor(var i in mymatch){\n    rows.push(mymatch[i].split(/\\s{1,}/));\n}\n\n// build an objects\nvar h = 1;\nif( rows[h] ){\n    msg.bag.hd = {\n        total: rows[h][1], \n        used: rows[h][2], \n        p:rows[h][4], \n        path:rows[h][5]\n    };\n}\nvar s = 0;\nmsg.bag.sd = {total: rows[s][1], used: rows[s][2], \n    p:rows[s][4], path:rows[s][5]};\n\nmsg.payload = msg.bag;\ndelete msg.bag;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "99c16a01.88ebb",
        "type": "subflow:186d6189.93a90e",
        "z": "95c0351f.c8f748",
        "name": "",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "54f1ae9b.28f528"
            ]
        ]
    },
    {
        "id": "54f1ae9b.28f528",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "set-glob",
        "func": "\nglobal.set('mem', msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "678b4119.53b83",
                "66b6c20c.ac1e2c"
            ]
        ]
    },
    {
        "id": "678b4119.53b83",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "mem-debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 730,
        "y": 80,
        "wires": []
    },
    {
        "id": "9a73283.ddb99d8",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "stick",
        "func": "\nvar input = msg.payload;\nif( input.state === 0 ){\n    return [msg, null];\n}\n\nvar modes = global.get('hat-modes');\nvar defModeInd = modes.findIndex(x => x.def);\nvar modeLen = modes.length;\n\nvar hat = global.get('hat') || {\n    led: false,\n    mode: modes[defModeInd].id,\n};\nif( typeof(hat.ind) === 'undefined' ){\n    hat.ind = defModeInd;\n}\nvar save = false;\n\nif( input.key === \"ENTER\" && input.state === 1 ){\n    hat.led = !hat.led;\n    save = true;\n}\nif( input.key === \"RIGHT\" && input.state === 1 ){\n    hat.ind += 1;\n    if( hat.ind >= modeLen){\n        hat.ind = 0;\n    }\n    \n    hat.mode = modes[hat.ind].id;\n    save = true;\n}\nif( input.key === \"LEFT\" && input.state === 1 ){\n    hat.ind += -1;\n    if( hat.ind < 0){\n        hat.ind = modeLen-1;\n    }\n    \n    hat.mode = modes[hat.ind].id;\n    save = true;\n}\n\nvar upOrDown = (\n    [\"UP\", \"DOWN\"].includes(input.key) \n    && [1,2].includes(input.state)\n);\nif( upOrDown ){\n    \n    var activeObj = modes[hat.ind];\n    \n    if( activeObj.change ){\n        var action = input.key.toLowerCase();\n        activeObj.change(activeObj.bag, action);\n    }\n    \n    // reset loop, without blinking\n    modes[hat.ind].c = 0; \n}\n\nif( save ){\n    \n    modes[hat.ind].c = 0;\n    \n    msg.payload = hat;\n    global.set('hat', hat);\n    \n    return [null, msg];\n}\nreturn [msg, null];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 340,
        "wires": [
            [],
            [
                "5eb43020.2eb7f",
                "c12b4008.b4cac8"
            ]
        ]
    },
    {
        "id": "c1418ca6.c3395",
        "type": "rpi-sensehat out",
        "z": "21dad95f.8d08de",
        "name": "led",
        "x": 830,
        "y": 580,
        "wires": []
    },
    {
        "id": "d1bdba30.b49d1",
        "type": "inject",
        "z": "21dad95f.8d08de",
        "name": "led-test",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 640,
        "wires": [
            [
                "a01d6bc1.34199"
            ]
        ]
    },
    {
        "id": "a01d6bc1.34199",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "led-fmt-h",
        "func": "\nvar scalePerc = function(p, min, max){\n    return p * (max - min) + min;\n};\nvar displayFill = function(num, x, c){\n    var rev = Math.abs(num - 8);\n    if( rev === 7 ){\n        return (`${x},${rev},${c}`);\n    }\n    else {\n        return (`${x},${rev}-7,${c}`);\n    }\n};\n\nvar mem = global.get('hub-mem');\n\nvar hubMem = Number(mem.hub.ram.p.replace('%', ''));\nvar kodiMem = Number(mem.kodi.ram.p.replace('%', ''));\n\nvar sHub = Math.round(scalePerc(hubMem / 100, 0, 7));\nvar sKodi = Math.round(scalePerc(kodiMem / 100, 0, 7));\n\nvar txt = ['*,*,black'];\ntxt.push( displayFill(sHub, '0-3', '#277573') );\ntxt.push( displayFill(sKodi, '4-7', '#277573') );\n\nnode.warn(txt);\nmsg.payload = txt.join(',');\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 640,
        "wires": [
            [
                "6ca6b73e.41a2a8",
                "c1418ca6.c3395"
            ]
        ]
    },
    {
        "id": "b4384aea.6402f",
        "type": "inject",
        "z": "21dad95f.8d08de",
        "name": "key-enter",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"key\": \"ENTER\", \"state\": 1 }",
        "payloadType": "json",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "f31ddeb9.436d28"
            ]
        ]
    },
    {
        "id": "c12b4008.b4cac8",
        "type": "debug",
        "z": "21dad95f.8d08de",
        "name": "stick",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "649c644a.6fbeb4",
        "type": "comment",
        "z": "21dad95f.8d08de",
        "name": "TODO - Move Alerts to HUB",
        "info": "",
        "x": 820,
        "y": 160,
        "wires": []
    },
    {
        "id": "918e2a64.1256",
        "type": "inject",
        "z": "21dad95f.8d08de",
        "name": "led-inter",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "3984453d.affd7a"
            ]
        ]
    },
    {
        "id": "e7555c.868c0aa8",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "led-fmt",
        "func": "\n/*\nFormat: <x>,<y>,<colour>\n\nx and y must either be a value from 0 to 7, \n* to indicate the entire row or column, \nor a range such as 3-6.\n*/\n// ## config\nvar BRIGHT = \"\\nD0\";\n\n// ## flow\nvar hat = global.get('hat') || {};\nvar showText = \"NONE\";\n\nif( !hat.led || msg.payload.reset ){\n    showText = '*,*,off';\n}\nelse {\n    var target = msg.payload;\n    showText = target.run(target.bag);\n}\n\nmsg.payload = showText + BRIGHT;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 580,
        "wires": [
            [
                "9f2f8183.72073",
                "c1418ca6.c3395"
            ]
        ]
    },
    {
        "id": "b5c12780.34a738",
        "type": "inject",
        "z": "21dad95f.8d08de",
        "name": "key-right",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"key\": \"RIGHT\" }",
        "payloadType": "json",
        "x": 260,
        "y": 420,
        "wires": [
            [
                "f31ddeb9.436d28"
            ]
        ]
    },
    {
        "id": "5d6d3717.189e3",
        "type": "inject",
        "z": "21dad95f.8d08de",
        "name": "key-left",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"key\": \"LEFT\", \"state\": 1 }",
        "payloadType": "json",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "f31ddeb9.436d28"
            ]
        ]
    },
    {
        "id": "9f2f8183.72073",
        "type": "debug",
        "z": "21dad95f.8d08de",
        "name": "led-debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 840,
        "y": 540,
        "wires": []
    },
    {
        "id": "5eb43020.2eb7f",
        "type": "trigger",
        "z": "21dad95f.8d08de",
        "name": "",
        "op1": "{\"reset\":true}",
        "op2": "",
        "op1type": "json",
        "op2type": "pay",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 630,
        "y": 420,
        "wires": [
            [
                "e7555c.868c0aa8"
            ],
            [
                "3984453d.affd7a"
            ]
        ]
    },
    {
        "id": "d9c50c4b.cc1cc8",
        "type": "inject",
        "z": "21dad95f.8d08de",
        "name": "key-up",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"key\": \"UP\", \"state\": 1 }",
        "payloadType": "json",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "f31ddeb9.436d28"
            ]
        ]
    },
    {
        "id": "d5767c3f.fbee1",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "12:00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 12 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sys/update",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 220,
        "wires": [
            [
                "e2d5511f.6ea198",
                "672580a0.7e8f9"
            ]
        ]
    },
    {
        "id": "fd5f6a5b.9eec48",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "apt list --upgradable",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "apt-list",
        "x": 570,
        "y": 220,
        "wires": [
            [
                "46cb6933.f99668"
            ],
            [],
            []
        ]
    },
    {
        "id": "46cb6933.f99668",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "parse-upg",
        "func": "\n// ## conf\nvar LIMIT = 20;\n\n// ## flow\nvar list = msg.payload.split(\"\\n\");\nvar len = list.length - 2;\nmsg.found = len;\n\nif( len < LIMIT ){\n    msg.payload = \"ignore - \" + len;\n    return [msg, null];\n}\n\nvar dev = global.get('device');\nvar req_body = {\n    topic: ('sys/update'),\n    msg: (\n        `[${dev.id}]` \n        + \" Apt upgradable: \" + len\n    )\n};\n\nmsg.headers = {};\nmsg.method = 'POST';\nmsg.payload = req_body;\n\nreturn [null, msg];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 220,
        "wires": [
            [
                "c4edac6f.5a3ea8",
                "e79b162.9f330e8"
            ],
            [
                "c4edac6f.5a3ea8",
                "da4ff837.feda6",
                "19444b9a.e711f4",
                "e79b162.9f330e8"
            ]
        ]
    },
    {
        "id": "c4edac6f.5a3ea8",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "apt-list",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "da4ff837.feda6",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "notice",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.3:1880/notice",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 950,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "2fe6936c.70c054",
        "type": "inject",
        "z": "b49b90bb.306d1",
        "name": "on-start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "config loaded...",
        "payloadType": "str",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "899632f4.b9931",
                "7b54e687.70fd48"
            ]
        ]
    },
    {
        "id": "899632f4.b9931",
        "type": "function",
        "z": "b49b90bb.306d1",
        "name": "confg",
        "func": "\nvar dev = {\n    id: 'hub'\n};\nvar svc = {\n    kodi: {\n        url: 'http://192.168.1.3:1880'\n    },\n    hub: {\n        url: 'http://localhost:1880'\n    }\n};\nvar backup_dir = '/media/pi/TOMAN-BL-8/bkp/';\n\nvar main_dir = '/home/pi';\nvar flow_file = main_dir + '/.node-red/flows_toman-pi4b.json';\nvar db_dir = main_dir + '/db';\n\nglobal.set('device', dev);\nglobal.set('svc', svc);\nglobal.set('flow_file', flow_file);\n\nglobal.set('reminder_url', 'localhost:9017');\nglobal.set('log_dir', db_dir + '/logs');\nglobal.set('db_dir', db_dir);\n\nglobal.set('backup_dir', backup_dir);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "5683680b.e6ca1",
                "4d753dd3.758764"
            ]
        ]
    },
    {
        "id": "19444b9a.e711f4",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "hook",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.3:1880/api/msg",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 950,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9a155bff.ff996",
        "type": "websocket in",
        "z": "5a09a613.e0de8",
        "name": "/ws/hub",
        "server": "3ba9ed27.5b9922",
        "client": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "84dbed84.60afb"
            ]
        ]
    },
    {
        "id": "e2cdb80a.a7f088",
        "type": "debug",
        "z": "5a09a613.e0de8",
        "name": "ws-hub",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 80,
        "wires": []
    },
    {
        "id": "84dbed84.60afb",
        "type": "json",
        "z": "5a09a613.e0de8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 100,
        "wires": [
            [
                "e2cdb80a.a7f088",
                "b957f058.cce4b"
            ]
        ]
    },
    {
        "id": "b957f058.cce4b",
        "type": "function",
        "z": "5a09a613.e0de8",
        "name": "hub-handle",
        "func": "\n// ## conf\nvar evlist = [\n    { topic: 'evt/ram', mem: 'hub-mem', history: 'ram-history' },\n    { topic: 'evt/sys', mem: 'hub-os' },\n    { topic: 'evt/weather', mem: 'hub-weather' },\n    { topic: 'evt/log', mem: null },\n    { topic: 'evt/temp', mem: 'temp' }\n];\n\n// ## func\nvar save_mem = function(label, obj){\n    var id = obj.id;\n    var mem = global.get(label) || {};\n    \n    if( id ){\n        mem[id] = obj;\n    }\n    else{\n        mem = obj;\n    }\n    \n    global.set(label, mem);\n    return mem;\n};\n\n// ## flow\nvar topic = msg.payload.topic || msg.topic;\nvar data = msg.payload.data || msg.payload;\n\nvar found = evlist.find( x => x.topic === topic );\nif( !found ){\n    // unhandeled\n    msg.payload.topic = msg.topic;\n    return [msg, null];\n}\n\nif( found.mem ){\n    save_mem(found.mem, data);\n}\nif( found.history ){\n    \n    var db_host = \"http://localhost:1880\";\n    msg.url = db_host + '/api/db/' + found.history;\n    msg.payload = data;\n}\n\nreturn [null, msg];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "e7a178b4.a60c7"
            ],
            [
                "ef31e689.48af98",
                "e3b93d57.f3b288"
            ]
        ]
    },
    {
        "id": "e7a178b4.a60c7",
        "type": "debug",
        "z": "5a09a613.e0de8",
        "name": "ws-hub-ignore",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "66b6c20c.ac1e2c",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "send-hub",
        "func": "\nvar data = msg.payload;\n\nmsg.payload ={\n    topic: 'evt/ram',\n    data: data\n};\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "9dd24e7d.d60c38"
            ]
        ]
    },
    {
        "id": "9dd24e7d.d60c38",
        "type": "link out",
        "z": "95c0351f.c8f748",
        "name": "send-hub-1",
        "links": [
            "3ee85bee.347054"
        ],
        "x": 775,
        "y": 120,
        "wires": []
    },
    {
        "id": "3ee85bee.347054",
        "type": "link in",
        "z": "5a09a613.e0de8",
        "name": "hub-in",
        "links": [
            "9dd24e7d.d60c38"
        ],
        "x": 235,
        "y": 140,
        "wires": [
            [
                "b957f058.cce4b"
            ]
        ]
    },
    {
        "id": "ef31e689.48af98",
        "type": "debug",
        "z": "5a09a613.e0de8",
        "name": "ws-hub-pass",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "5cc367ac.c2a13",
        "type": "http in",
        "z": "5a09a613.e0de8",
        "name": "G /api/status",
        "url": "/api/status",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "bc49ed37.9a0378"
            ]
        ]
    },
    {
        "id": "bc49ed37.9a0378",
        "type": "function",
        "z": "5a09a613.e0de8",
        "name": "get-glob",
        "func": "\n// ## config\nvar map = {\n    '/api/status': 'hub-mem',\n    '/api/sys': 'hub-os'\n};\n\n// ## flow\nvar url = msg.req.url;\nvar label = map[url];\n\nif( !label ){\n    msg.statusCode = 404;\n    msg.payload = 'Not found';\n}\nelse {\n    var mem = global.get(label) || {};\n    var memList = Object.values(mem);\n    \n    msg.payload = {\n        total: memList.length,\n        rows: memList\n    };\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "d6be2601.ba6e68"
            ]
        ]
    },
    {
        "id": "d6be2601.ba6e68",
        "type": "http response",
        "z": "5a09a613.e0de8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 320,
        "wires": []
    },
    {
        "id": "c72e9905.1bf288",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "alert-temp",
        "func": "\n// ## config\nvar TEMP_UPPER = 28;\nvar TEMP_LOWER = 18;\n\n// ## flow\nvar temp = msg.payload;\nvar alObj = global.get('alert-state') || {\n    temp: {}\n};\nvar date = new Date();\nvar ts = date.toISOString();\n\nvar alertTempStart = (\n    alObj.temp.state !== 'alert'\n    && (\n        temp.cal > TEMP_UPPER\n        || temp.cal < TEMP_LOWER\n    )\n);\nif( alertTempStart ){\n    alObj.temp.state = 'alert';\n    alObj.temp.ts = ts;\n    global.set('alert-state', alObj);\n    \n    msg.payload = {\n        msg: 'Alert: temperature = ' + temp.cal\n    };\n    \n    return [null, msg];\n}\n\nvar alertTempStop = (\n    alObj.temp.state === 'alert'\n    && (\n        temp.cal < TEMP_UPPER - 1\n        && temp.cal > TEMP_LOWER + 1\n    )\n);\nif( alertTempStop ){\n    alObj.temp.state = 'ok';\n    alObj.temp.ts = ts;\n    global.set('alert-state', alObj);\n    \n    msg.payload = {\n        msg: 'Recovered: temperature = ' + temp.cal\n    };\n    \n    return [null, msg];\n}\n\nreturn [msg, null];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 200,
        "wires": [
            [],
            [
                "b1009990.2cad3"
            ]
        ]
    },
    {
        "id": "b1009990.2cad3",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "hook",
        "func": "\nmsg.method = 'POST';\nmsg.url = 'http://192.168.1.3:1880/api/msg';\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "31d2266d.78d9da",
        "type": "http request",
        "z": "21dad95f.8d08de",
        "name": "hook",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 890,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "8b86bf3.8679fc",
        "type": "http in",
        "z": "21dad95f.8d08de",
        "name": "G /api/temp",
        "url": "/api/temp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "1e2726af.a1caa9"
            ]
        ]
    },
    {
        "id": "1e2726af.a1caa9",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "fmt-temp",
        "func": "\nvar temp = global.get('temp');\nmsg.payload = {\n  rows: [temp] \n};\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 780,
        "wires": [
            [
                "cafff6c2.74c058"
            ]
        ]
    },
    {
        "id": "cafff6c2.74c058",
        "type": "http response",
        "z": "21dad95f.8d08de",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 780,
        "wires": []
    },
    {
        "id": "45d7f77a.e64d18",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "sudo apt update",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "apt-update",
        "x": 530,
        "y": 300,
        "wires": [
            [
                "51b50148.bc35c8",
                "fd5f6a5b.9eec48"
            ],
            [
                "51b50148.bc35c8"
            ],
            []
        ]
    },
    {
        "id": "51b50148.bc35c8",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "apt-1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 320,
        "wires": []
    },
    {
        "id": "c88af63b.1dd358",
        "type": "inject",
        "z": "21dad95f.8d08de",
        "name": "on-start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "db2793a4.1477a8",
                "ccc2a148.fa46"
            ]
        ]
    },
    {
        "id": "db2793a4.1477a8",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "hat-modes",
        "func": "// ## func\nvar getRandom = function(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nvar randomColor = function(){\n    return '#' + getRandom(0, 16777215).toString(16);\n};\n\n// ## conf\nvar modes = [{\n    id: 'sparkle',\n    time: 0.5,\n    run: function(){\n        var r = Math.random();\n        if( r > 0.98 ){\n            return ['*', '*', 'black'];\n        }\n        var p = getRandom(0, 63);\n        \n        // 2 --> 0, 2\n        var y = Math.floor(p / 8);\n        var x = p % 8; \n        var c = randomColor();\n        return [x,y,c].join(',');\n    }\n},{\n    id: 'lamp',\n    time: 5,\n    bag: {\n        level: 8, // Full by default\n        light: '#eedca5' // day-white\n    },\n    change: function(arg, dir){\n        \n        var toadd = ( dir === 'up' ) ? 1 : -1;\n        arg.level += toadd;\n        // constrain min-max\n        arg.level = Math.max(1, arg.level);\n        arg.level = Math.min(8, arg.level);\n        return true;\n    },\n    run: function(arg){\n        \n        var rows = [];\n        \n        for(var y=7;y>=0;y--){\n            var color = ( y < arg.level ) ?\n                arg.light : 'black';\n            \n            rows.push(`*,${7-y},${color}`);\n        }\n        \n        return rows.join(',');\n    }\n},{\n    id: 'rnd',\n    time: 1,\n    run: function(){\n        var rndList = [];\n    \n        for(var y=0; y<8; y++){\n            var colorToUse = randomColor();\n            rndList.push( `0-7,${y},${colorToUse}` );\n        }\n    \n        return rndList.join(',');\n    }\n},{\n    id: 'temp-num',\n    time: 5,\n    def: true,\n    bag: {\n        //light: 'white'\n        light: '#18704a', // greenish\n        light2: '#b02121' // red\n    },\n    run: function(arg){\n        \n        var colorDisplay = flow.get('colorDisplay');\n        var numMatrix = flow.get('numMatrix');\n        var temp = global.get('temp') || {cal:10};\n        var outside = global.get('hub-weather') || {temp:10};\n        \n        var num = Math.floor(temp.cal);\n        var num2 = Math.round(outside.temp);\n        \n        var matrix = numMatrix(num, Math.abs(num2) );\n        \n        var outsideColor = (num2 > 0) ? arg.light2 : 'white';\n        return colorDisplay(matrix, arg.light, outsideColor);\n        \n    }\n},{\n    id: 'heart',\n    run: function(){\n        var color = 'purple';\n        var list = [];\n        \n        list.push(`1-2,0,${color}`);list.push(`5-6,0,${color}`);\n        list.push(`*,1,${color}`);\n        list.push(`*,2,${color}`);\n        list.push(`*,3,${color}`);\n        list.push(`*,4,${color}`);\n        list.push(`1-6,5,${color}`);\n        list.push(`2-5,6,${color}`);\n        list.push(`3-4,7,${color}`);\n        \n        return list;\n    }\n}];\n\nglobal.set('hat-modes', modes);\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 60,
        "wires": [
            [
                "aa5b7c10.9d3918"
            ]
        ]
    },
    {
        "id": "56a8ac0f.620774",
        "type": "inject",
        "z": "21dad95f.8d08de",
        "name": "key-d",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"key\": \"DOWN\", \"state\": 1 }",
        "payloadType": "json",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "f31ddeb9.436d28"
            ]
        ]
    },
    {
        "id": "3984453d.affd7a",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "find-mode",
        "func": "\nvar INTER = 0.5;\n\n// ## flow\nvar modes = global.get('hat-modes');\nvar hat = global.get('hat') || {};\n\nvar target = modes.find( x => x.id === hat.mode);\nif( !target ){\n    target = modes.find(x => x.def );\n}\nmsg.payload = target;\n\nif( !target.time ){\n    target.time = 5;\n}\nif( !target.cyc ){\n    target.cyc = Math.floor(target.time / INTER);\n}\nvar setZero = ( \n    typeof(target.c) === 'undefined'\n    || target.c / target.cyc > 100\n);\nif( setZero ){\n    target.c = 0;\n}\n\nvar lus = target.c % target.cyc;\ntarget.c += 1;\n\n//node.warn(`DEBUG - mode = ${target.id} | lus = ${lus}`);\nif( lus === 0 ){\n    return [null, msg];\n}\n\nreturn [msg, null];\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 580,
        "wires": [
            [],
            [
                "e7555c.868c0aa8",
                "77b3a559.f8d47c"
            ]
        ]
    },
    {
        "id": "580ea5f3.a32234",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "05:00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 05 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bkp/flow",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 440,
        "wires": [
            [
                "564c18f.ceb1e68"
            ]
        ]
    },
    {
        "id": "564c18f.ceb1e68",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "bkp-flow",
        "func": "\nmsg.filename = global.get('flow_file');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 460,
        "wires": [
            [
                "1382d43e.814e1c"
            ]
        ]
    },
    {
        "id": "1382d43e.814e1c",
        "type": "file in",
        "z": "95c0351f.c8f748",
        "name": "R file",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "x": 390,
        "y": 440,
        "wires": [
            [
                "7f25e9d5.a893b8",
                "a0a9023c.d45598"
            ]
        ]
    },
    {
        "id": "7f25e9d5.a893b8",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "bkp-send",
        "func": "\nvar dev = global.get('device');\nvar svc = global.get('svc');\n\nmsg.method = 'POST';\nmsg.url = svc.hub.url + '/api/db/flows/' + dev.id\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 460,
        "wires": [
            [
                "265921fa.6b66a6"
            ]
        ]
    },
    {
        "id": "a0a9023c.d45598",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "bkp-flow-1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 420,
        "wires": []
    },
    {
        "id": "265921fa.6b66a6",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "db",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 690,
        "y": 460,
        "wires": [
            [
                "39ede01e.bb302"
            ]
        ]
    },
    {
        "id": "88a318c0.a7234",
        "type": "comment",
        "z": "5a09a613.e0de8",
        "name": "TODO save Temp readings / Link alerts",
        "info": "",
        "x": 710,
        "y": 260,
        "wires": []
    },
    {
        "id": "c99b154a.f7f048",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "alert-hum",
        "func": "\n// ## config\nvar LOWER = 15;\nvar UPPER = 50;\n\n// ## flow\nvar temp = msg.payload;\nvar alObj = global.get('alert-state') || {};\nif( !alObj.hum ){\n    alObj.hum = {};\n}\nvar date = new Date();\nvar ts = date.toISOString();\n\nvar alertTempStart = (\n    alObj.hum.state !== 'alert'\n    && (\n        temp.humidity > UPPER\n        || temp.humidity < LOWER\n    )\n);\nif( alertTempStart ){\n    alObj.hum.state = 'alert';\n    alObj.hum.ts = ts;\n    global.set('alert-state', alObj);\n    \n    msg.payload = {\n        msg: 'Alert: hum = ' + temp.humidity\n    };\n    \n    return [null, msg];\n}\n\nvar alertTempStop = (\n    alObj.hum.state === 'alert'\n    && (\n        temp.humidity < UPPER - 1\n        && temp.humidity > LOWER + 1\n    )\n);\nif( alertTempStop ){\n    alObj.hum.state = 'ok';\n    alObj.hum.ts = ts;\n    global.set('alert-state', alObj);\n    \n    msg.payload = {\n        msg: 'Recovered: humidity = ' + temp.humidity\n    };\n    \n    return [null, msg];\n}\n\nreturn [msg, null];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 240,
        "wires": [
            [],
            [
                "b1009990.2cad3"
            ]
        ]
    },
    {
        "id": "e2d5511f.6ea198",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "log",
        "func": "\nvar dev = global.get('device');\n\nmsg.payload = {\n    id: dev.id,\n    level: 'debug',\n    action: msg.topic,\n    detail: 'start'\n};\nmsg.topic = 'evt/log';\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 180,
        "wires": [
            [
                "85f81ef5.a4215"
            ]
        ]
    },
    {
        "id": "85f81ef5.a4215",
        "type": "mqtt out",
        "z": "95c0351f.c8f748",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "29411507.7decc2",
        "x": 410,
        "y": 160,
        "wires": []
    },
    {
        "id": "e79b162.9f330e8",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "report",
        "func": "\nvar dev = global.get('device');\n\nvar cronTopic = msg.topic;\nvar update = msg.found;\nvar date = new Date();\n\nvar log = {\n    topic: \"evt/log\",\n    payload: {\n        id: dev.id,\n        level: 'info',\n        action: cronTopic,\n        detail: update\n    }\n};\n\nvar sys = {\n  topic: \"evt/sys\",\n  payload: {\n      id: dev.id,\n      ts: date.toISOString(),\n      cron: cronTopic,\n      os: msg.os_name,\n      update: update\n  }\n};\n\nreturn [[log, sys]];\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 160,
        "wires": [
            [
                "edf91b7f.009f78"
            ]
        ]
    },
    {
        "id": "edf91b7f.009f78",
        "type": "mqtt out",
        "z": "95c0351f.c8f748",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "broker": "29411507.7decc2",
        "x": 970,
        "y": 160,
        "wires": []
    },
    {
        "id": "39ede01e.bb302",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "bkp-flow-2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 460,
        "wires": []
    },
    {
        "id": "f31ddeb9.436d28",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "key-sim",
        "func": "\nmsg.payload.state = 1;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 360,
        "wires": [
            [
                "9a73283.ddb99d8"
            ]
        ]
    },
    {
        "id": "1754f714.8f8a09",
        "type": "delay",
        "z": "21dad95f.8d08de",
        "name": "2-per-sec",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 280,
        "y": 300,
        "wires": [
            [
                "9a73283.ddb99d8"
            ]
        ]
    },
    {
        "id": "672580a0.7e8f9",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "cat /etc/os-release",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "os-release",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "2d89d3b2.436274",
                "fa857518.1cc51"
            ],
            [
                "2d89d3b2.436274"
            ],
            []
        ]
    },
    {
        "id": "2d89d3b2.436274",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "os-rel",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 220,
        "wires": []
    },
    {
        "id": "fa857518.1cc51",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "fmt-os",
        "func": "\nvar print = msg.payload;\nvar lines = print.split(\"\\n\");\nvar name_tuple = lines.find(x => x.includes(\"PRETTY_NAME\"));\nvar name = name_tuple.split('=')[1].replace(/\\\"/g, '');\n\nmsg.os_name = name;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "45d7f77a.e64d18"
            ]
        ]
    },
    {
        "id": "38022445.53559c",
        "type": "mqtt in",
        "z": "5a09a613.e0de8",
        "name": "",
        "topic": "evt/+",
        "qos": "2",
        "datatype": "json",
        "broker": "29411507.7decc2",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "8668a009.c07588",
                "b957f058.cce4b"
            ]
        ]
    },
    {
        "id": "8668a009.c07588",
        "type": "debug",
        "z": "5a09a613.e0de8",
        "name": "mqtt-evt",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 240,
        "wires": []
    },
    {
        "id": "eb978b1f.2bf828",
        "type": "http in",
        "z": "5a09a613.e0de8",
        "name": "G /api/sys",
        "url": "/api/sys",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "bc49ed37.9a0378"
            ]
        ]
    },
    {
        "id": "6ca6b73e.41a2a8",
        "type": "debug",
        "z": "21dad95f.8d08de",
        "name": "led-test",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 660,
        "wires": []
    },
    {
        "id": "ccc2a148.fa46",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "hat-numbers",
        "func": "\nvar number = [\n0,1,1,1, //# Zero\n0,1,0,1,\n0,1,0,1,\n0,1,1,1,\n\n0,0,1,0, //# One\n0,1,1,0,\n0,0,1,0,\n0,1,1,1,\n\n0,1,1,1, //# Two\n0,0,1,1,\n0,1,1,0,\n0,1,1,1,\n\n0,1,1,1, //# Three\n0,0,1,1,\n0,0,1,1,\n0,1,1,1,\n\n0,1,0,1, //# Four\n0,1,1,1,\n0,0,0,1,\n0,0,0,1,\n\n0,1,1,1, //# Five\n0,1,1,0,\n0,0,1,1,\n0,1,1,1,\n\n0,1,0,0, //# Six\n0,1,1,1,\n0,1,0,1,\n0,1,1,1,\n\n0,1,1,1, //# Seven\n0,0,0,1,\n0,0,1,0,\n0,1,0,0,\n\n0,1,1,1, //# Eight\n0,1,1,1,\n0,1,1,1,\n0,1,1,1,\n\n0,1,1,1, //# Nine\n0,1,0,1,\n0,1,1,1,\n0,0,0,1\n];\n\nflow.set('led_number', number);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "aa5b7c10.9d3918",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "hat-display",
        "func": "\nvar number = flow.get('led_number');\nvar display = [\n0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0\n];\n\nvar colorDisplay = function(matrix, color1, color2){\n    var colored = [];\n    for(var z=0; z < matrix.length; z++){\n        var x = z % 8;\n        var y = Math.floor(z / 8);\n        \n        var kon = (z < 32 ) ? color1 : color2;\n        var k = (matrix[z]) ? kon : 'black';\n        \n        colored.push(`${x},${y},${k}`);\n    }\n    \n    return colored.join(',');\n};\n\nvar numMatrix = function(num, num2){\n    \n    var digits = 4;\n    var pixel_offset = 0;\n    var index = 0;\n    \n    for(var i=0; i < digits; i++){\n        for(var c=0; c < digits; c++){\n            var f1 = Math.floor(num / 10);\n            var s1 = (num % 10);\n            \n            var f2 = Math.floor(num2 / 10);\n            var s2 = (num2 % 10);\n            \n            display[index] = number[f1 * 16 + pixel_offset];\n            display[index+4] = number[s1 * 16 + pixel_offset];\n            display[index+32] = number[f2 * 16 + pixel_offset];\n            display[index+36] = number[s2 * 16 + pixel_offset];\n            /*\n            node.warn('f2 = ' + f2 \n                + ' | num = ' + (f2 * 16 + pixel_offset)\n                + ' | num = '+ number[f2 * 16 + pixel_offset]\n            );\n            */\n            pixel_offset += 1;\n            index += 1;\n        }\n        index += 4;\n    }\n    return display;\n};\n\n\nflow.set('led_display', display);\nflow.set('colorDisplay', colorDisplay);\nflow.set('numMatrix', numMatrix);\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7b54e687.70fd48",
        "type": "debug",
        "z": "b49b90bb.306d1",
        "name": "on-start",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 100,
        "wires": []
    },
    {
        "id": "8df7aaff.2b8de",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "15-min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "feed/weather",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 540,
        "wires": [
            [
                "927eb17f.2183d"
            ]
        ]
    },
    {
        "id": "927eb17f.2183d",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "weather-req",
        "func": "\nvar w_creds = global.get('weather_config');\nvar host = w_creds.host;\nvar key = w_creds.key;\nvar city = w_creds.city;\n\n\nmsg.url = `https://${host}/data/2.5/weather`;\nmsg.url += `?q=${city}&appid=${key}&units=metric`;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 580,
        "wires": [
            [
                "98003770.446928"
            ]
        ]
    },
    {
        "id": "98003770.446928",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "weather",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 420,
        "y": 540,
        "wires": [
            [
                "14022748.83a571",
                "ccae1980.327a3"
            ]
        ]
    },
    {
        "id": "ccae1980.327a3",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "weather",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 520,
        "wires": []
    },
    {
        "id": "14022748.83a571",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "weather-fmt",
        "func": "\nvar got = msg.payload;\nvar date = new Date();\n\nvar sunrise = new Date(got.sys.sunrise * 1000);\nvar sunset = new Date(got.sys.sunset * 1000);\n\nvar obj = {\n    temp: got.main.temp,\n    humidity: got.main.humidity,\n    pressure: got.main.pressure,\n    sun: {\n        sunrise: sunrise,\n        sunset: sunset,\n    },\n    other: {\n        sky: got.weather[0].main.toLowerCase(),\n        wind: got.wind,\n        clouds: got.clouds\n    },\n    ts: date.toISOString()\n};\n\nmsg.topic = 'evt/weather';\nmsg.payload = obj;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 580,
        "wires": [
            [
                "50fb9a86.c259ec",
                "840f0b14.58b9c"
            ]
        ]
    },
    {
        "id": "50fb9a86.c259ec",
        "type": "mqtt out",
        "z": "95c0351f.c8f748",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "broker": "29411507.7decc2",
        "x": 730,
        "y": 580,
        "wires": []
    },
    {
        "id": "840f0b14.58b9c",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "w-fmt",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 540,
        "wires": []
    },
    {
        "id": "20664543.f7ba6a",
        "type": "function",
        "z": "b49b90bb.306d1",
        "name": "weather-conf",
        "func": "\nglobal.set('weather_config', msg.payload);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "11f88b0.d8869f5",
        "type": "http in",
        "z": "e74f2b92.a31178",
        "name": "G /api/cache/:key?",
        "url": "/api/cache/:key?",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "f526f70c.5996a"
            ]
        ]
    },
    {
        "id": "f526f70c.5996a",
        "type": "function",
        "z": "e74f2b92.a31178",
        "name": "get-cache",
        "func": "\nvar redis = global.get('redis');\n\nvar key = msg.req.params.key;\nvar result = null;\n\nif( key ){\n    result = await redis.get(key);\n}\nelse{\n    var q = msg.req.query;\n    var pattern = q.keys || '*';\n    result = await redis.keys(pattern);\n}\n\ntry{\n    result = JSON.parse(result);\n}\ncatch(err){\n    \n}\n\nmsg.payload = result;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "dea72691.9a583"
            ]
        ]
    },
    {
        "id": "dea72691.9a583",
        "type": "http response",
        "z": "e74f2b92.a31178",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "b762469a.1f4fd8",
        "type": "redis-instance",
        "z": "b49b90bb.306d1",
        "server": "69c4d57b.c5a4ec",
        "name": "",
        "topic": "redis",
        "location": "global",
        "x": 110,
        "y": 280,
        "wires": []
    },
    {
        "id": "34462640.5a21ba",
        "type": "comment",
        "z": "5a09a613.e0de8",
        "name": "TODO save RAM readings",
        "info": "",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "8d0199b3.0f7f4",
        "type": "http request",
        "z": "5a09a613.e0de8",
        "name": "history",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 810,
        "y": 160,
        "wires": [
            [
                "b9fd3835.28de08"
            ]
        ]
    },
    {
        "id": "e3b93d57.f3b288",
        "type": "function",
        "z": "5a09a613.e0de8",
        "name": "hub-history",
        "func": "\nif( msg.url ){\n    return [null, msg];\n}\n\nreturn [msg, null];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b9fd3835.28de08",
        "type": "debug",
        "z": "5a09a613.e0de8",
        "name": "hub-history",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 100,
        "wires": []
    },
    {
        "id": "d515cedf.287a58",
        "type": "http in",
        "z": "e74f2b92.a31178",
        "name": "G /api/db",
        "url": "/api/db",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "2d36d1c2.4f9c3e"
            ]
        ]
    },
    {
        "id": "eaf2e59d.a8b418",
        "type": "http response",
        "z": "e74f2b92.a31178",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 180,
        "wires": []
    },
    {
        "id": "8de69fc6.19c84",
        "type": "http in",
        "z": "21dad95f.8d08de",
        "name": "P /api/hat",
        "url": "/api/hat",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "f31ddeb9.436d28"
            ]
        ]
    },
    {
        "id": "48d78a07.647dcc",
        "type": "http in",
        "z": "21dad95f.8d08de",
        "name": "P /api/hat/off",
        "url": "/api/hat/off",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "edf90747.0e977"
            ]
        ]
    },
    {
        "id": "edf90747.0e977",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "hat-off",
        "func": "\nvar hat = global.get('hat') || {};\n\nhat.led = false;\nglobal.set('hat', hat);\n\nmsg.payload = hat;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 840,
        "wires": [
            [
                "cafff6c2.74c058"
            ]
        ]
    },
    {
        "id": "83a67887.89d138",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "22:40",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "40 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "hat/off",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "d8229502.fa5758"
            ]
        ]
    },
    {
        "id": "d8229502.fa5758",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "hat-off",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/api/hat/off",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 270,
        "y": 660,
        "wires": [
            [
                "366694b1.5e4b6c"
            ]
        ]
    },
    {
        "id": "366694b1.5e4b6c",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "hat-off",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 680,
        "wires": []
    },
    {
        "id": "53ed1b9c.c9bcbc",
        "type": "http in",
        "z": "21dad95f.8d08de",
        "name": "P /api/hat/on",
        "url": "/api/hat/on",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 900,
        "wires": [
            [
                "b764533e.9dd278"
            ]
        ]
    },
    {
        "id": "b764533e.9dd278",
        "type": "function",
        "z": "21dad95f.8d08de",
        "name": "hat-on",
        "func": "\nvar hat = global.get('hat') || {};\n\nhat.led = true;\nglobal.set('hat', hat);\n\nmsg.payload = hat;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 900,
        "wires": [
            [
                "cafff6c2.74c058"
            ]
        ]
    },
    {
        "id": "31e183b7.999ca4",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "08:20",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "20 08 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "hat/on",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "6567d660.bde57",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "hat-on",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/api/hat/on",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 270,
        "y": 720,
        "wires": [
            [
                "366694b1.5e4b6c"
            ]
        ]
    },
    {
        "id": "bcddd166.64b5f",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "06:00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 820,
        "wires": [
            [
                "f33e799a.19b6f8"
            ]
        ]
    },
    {
        "id": "f33e799a.19b6f8",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "db-ttl-map",
        "func": "\nvar config = [{\n    table: 'ram-history',\n    att: 'time',\n    days: 7 // days\n}];\n\nmsg.db_host = 'http://192.168.1.2:5984';\n\nfor(var p of config){\n    msg.payload = p;\n    node.send(msg);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 800,
        "wires": [
            [
                "b1a0bc02.0fab"
            ]
        ]
    },
    {
        "id": "b1a0bc02.0fab",
        "type": "delay",
        "z": "95c0351f.c8f748",
        "name": "1-per-sec",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 400,
        "y": 820,
        "wires": [
            [
                "d694c237.fb3c78"
            ]
        ]
    },
    {
        "id": "d694c237.fb3c78",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "prep-search",
        "func": "\nvar obj = msg.payload;\nvar date = new Date();\ndate.setDate(date.getDate() - obj.days);\nvar ts = date.toISOString();\n\nvar sorter = {};\nsorter[obj.att] = \"acs\";\n\nvar query = {};\nquery[obj.att] = {\n    \"$lt\": ts\n};\n\nmsg.obj = obj;\nmsg.db_url = msg.db_host + '/' + obj.table;\nmsg.url = msg.db_url + '/_find';\nmsg.reqBody = {\n    limit: 100,\n    //sort: [sorter],\n    selector: query,\n    execution_stats: true,\n    update: false,\n    use_index: \"_design/idx-997aa4865c5953cce74334959a82c02b\"\n};\n\nmsg.payload = msg.reqBody;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "362a75f9.af6f92",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 760,
        "wires": []
    },
    {
        "id": "3a4019d3.f91636",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "db-search",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 700,
        "y": 820,
        "wires": [
            [
                "362a75f9.af6f92"
            ]
        ]
    },
    {
        "id": "77b3a559.f8d47c",
        "type": "debug",
        "z": "21dad95f.8d08de",
        "name": "led-debug-2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 500,
        "wires": []
    },
    {
        "id": "6f8b779f.20db4",
        "type": "http in",
        "z": "e74f2b92.a31178",
        "name": "P /api/reminder",
        "url": "/api/reminder",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "d1b03b7e.0d2638",
                "aec61719.77605"
            ]
        ]
    },
    {
        "id": "d1b03b7e.0d2638",
        "type": "debug",
        "z": "e74f2b92.a31178",
        "name": "rem",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 440,
        "wires": []
    },
    {
        "id": "aec61719.77605",
        "type": "function",
        "z": "e74f2b92.a31178",
        "name": "parse",
        "func": "\n\nmsg.url = global.get('reminder_url') + '/reminders';\nmsg.method = 'POST';\n\nvar reqBody = {\n    hook: 'http://192.168.1.2:1880/api/msg',\n    payload: {\n        msg: 'Reminder: ' + msg.payload.payload\n    },\n    delay: Number(msg.payload.delay)\n};\n\n//msg.payload = JSON.stringify(reqBody);\nmsg.payload = reqBody;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 480,
        "wires": [
            [
                "c03e2183.ca1758"
            ]
        ]
    },
    {
        "id": "c03e2183.ca1758",
        "type": "http request",
        "z": "e74f2b92.a31178",
        "name": "rem-svc",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 480,
        "y": 480,
        "wires": [
            [
                "1b3da387.0fa3b4",
                "d02e30c3.2b2fd"
            ]
        ]
    },
    {
        "id": "1b3da387.0fa3b4",
        "type": "debug",
        "z": "e74f2b92.a31178",
        "name": "rem 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 480,
        "wires": []
    },
    {
        "id": "d02e30c3.2b2fd",
        "type": "http response",
        "z": "e74f2b92.a31178",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 640,
        "y": 520,
        "wires": []
    },
    {
        "id": "be804d4c.c52638",
        "type": "http in",
        "z": "e74f2b92.a31178",
        "name": "P /api/msg",
        "url": "/api/msg",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "5aa7cc51.fdc7d4",
                "d662dc43.b92a48"
            ]
        ]
    },
    {
        "id": "5aa7cc51.fdc7d4",
        "type": "debug",
        "z": "e74f2b92.a31178",
        "name": "msg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 540,
        "wires": []
    },
    {
        "id": "d662dc43.b92a48",
        "type": "http request",
        "z": "e74f2b92.a31178",
        "name": "post kodi",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.1.3:1880/api/msg",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 300,
        "y": 580,
        "wires": [
            [
                "1dd933f.a68d4cc"
            ]
        ]
    },
    {
        "id": "1dd933f.a68d4cc",
        "type": "http response",
        "z": "e74f2b92.a31178",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 580,
        "wires": []
    },
    {
        "id": "26aad741.c79e7",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "20 sec interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 900,
        "wires": [
            [
                "5203c6ff.3d33b8"
            ]
        ]
    },
    {
        "id": "5203c6ff.3d33b8",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "sudo netstat -tulpn",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "port-list",
        "x": 320,
        "y": 900,
        "wires": [
            [
                "8c0ff1ac.6f2df8"
            ],
            [
                "8c0ff1ac.6f2df8"
            ],
            []
        ]
    },
    {
        "id": "8c0ff1ac.6f2df8",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "port-list",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 900,
        "wires": []
    },
    {
        "id": "8e13f0ca.a34b68",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "1 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 980,
        "wires": [
            [
                "5885dfd.092fba"
            ]
        ]
    },
    {
        "id": "5885dfd.092fba",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "Healthcheck",
        "func": "\nvar col = [\n    { name: \"portfolio\", url: \"http://192.168.1.2:8080\" },\n    { name: \"svc-reminder\", url: \"http://192.168.1.2:9017\" }\n];\n\ncol.forEach(function(x){\n    node.send({\n        obj: x, \n        url: x.url, \n        payload: null\n    });\n});\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 980,
        "wires": [
            [
                "1e97469b.873bb9"
            ]
        ]
    },
    {
        "id": "1e97469b.873bb9",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "http",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "d8571a79.e29138"
            ]
        ]
    },
    {
        "id": "d8571a79.e29138",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "parse",
        "func": "\n\nvar name = msg.obj.name;\nvar st = flow.get('health') || {};\nif( !st[name] ){\n    st[name] = {state: true};\n}\n\n// msg.obj - name, url\n// msg.statusCode\n\nvar code = msg.statusCode;\nvar pass = (\n    code && code.toString()[0]\n    && code.toString()[0] === '2'\n);\nvar desc = name + ' = ' + msg.statusCode;\n\nif( pass ){\n    st[name].state = true;\n    flow.set('health', st);\n    \n    msg.payload = desc;\n    return [null, msg];\n}\n\nif( st[name].state === false ){\n    //already known\n    return false;\n}\n\nst[name].state = false;\nflow.set('health', st);\n\nmsg.payload = {\n    msg: \"Health fail - \" + desc\n};\nmsg.url = 'http://localhost:1880/api/msg';\nmsg.method = 'POST';\nreturn [msg, null];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 980,
        "wires": [
            [
                "bfe7cbed.35163",
                "9c21b4fe.5495a"
            ],
            [
                "681d35f9.f6a2a4"
            ]
        ]
    },
    {
        "id": "bfe7cbed.35163",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "healthcheck",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 940,
        "wires": []
    },
    {
        "id": "2e135ab4.199db6",
        "type": "hue-group",
        "z": "8f5b891c.995788",
        "name": "bed",
        "bridge": "14f26699.674e91",
        "groupid": "1",
        "colornamer": true,
        "skipevents": false,
        "universalevents": false,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "79152b95.8174fc"
            ]
        ]
    },
    {
        "id": "ff5b7eaf.5d3368",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-on",
        "props": [
            {
                "p": "payload.on",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "2e135ab4.199db6"
            ]
        ]
    },
    {
        "id": "f313733b.ec912",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-off",
        "props": [
            {
                "p": "payload.on",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "2e135ab4.199db6"
            ]
        ]
    },
    {
        "id": "1e528814.574628",
        "type": "hue-group",
        "z": "8f5b891c.995788",
        "name": "kid",
        "bridge": "14f26699.674e91",
        "groupid": "2",
        "colornamer": true,
        "skipevents": false,
        "universalevents": false,
        "x": 390,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "bbb9ac71.10008",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "kid-on",
        "props": [
            {
                "p": "payload.on",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "1e528814.574628"
            ]
        ]
    },
    {
        "id": "a635f867.9db82",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "kid-off",
        "props": [
            {
                "p": "payload.on",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "1e528814.574628"
            ]
        ]
    },
    {
        "id": "3ba6a5f3.29331a",
        "type": "debug",
        "z": "8f5b891c.995788",
        "name": "hue bridge 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 60,
        "wires": []
    },
    {
        "id": "d458a4de.a4eae8",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "status",
        "props": [
            {
                "p": "payload.fetch",
                "v": "groups",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "839c7340.59cf88"
            ]
        ]
    },
    {
        "id": "63deadf0.592dd4",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-bri-up",
        "props": [
            {
                "p": "payload.incrementBrightness",
                "v": "10",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "2e135ab4.199db6"
            ]
        ]
    },
    {
        "id": "867edd98.9baf2",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-bri-down",
        "props": [
            {
                "p": "payload.decrementBrightness",
                "v": "10",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "2e135ab4.199db6"
            ]
        ]
    },
    {
        "id": "83ada0e3.131668",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-bri-100",
        "props": [
            {
                "p": "payload.brightness",
                "v": "100",
                "vt": "num"
            },
            {
                "p": "payload.transitionTime",
                "v": "3",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 410,
        "y": 340,
        "wires": [
            [
                "2e135ab4.199db6"
            ]
        ]
    },
    {
        "id": "7ccc9420.1c2b64",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-bri-80",
        "props": [
            {
                "p": "payload.brightness",
                "v": "80",
                "vt": "num"
            },
            {
                "p": "payload.transitionTime",
                "v": "3",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 420,
        "y": 380,
        "wires": [
            [
                "2e135ab4.199db6"
            ]
        ]
    },
    {
        "id": "ba107c03.6be9d8",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-alarm",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 140,
        "y": 640,
        "wires": [
            [
                "8f177c30.99dc18"
            ]
        ]
    },
    {
        "id": "67c5bd23.678f84",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "bed-alarm-check",
        "func": "\nvar redis = global.get('redis');\nvar data = await redis.get('cron:hue:groups');\nvar data = JSON.parse(data);\n\nvar target = data.rows.find(x => x.kind === 'Bedroom' );\n\nif( target && target.on ){\n    msg.payload = \"Light is aleady ON = \" + target.per;\n    return [msg, null];\n}\n\nnode.warn(msg);\nreturn [null, msg];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 680,
        "wires": [
            [
                "49ef72e0.9fdcf4"
            ],
            [
                "da69fbd8.61f83"
            ]
        ]
    },
    {
        "id": "ca10b6eb.76f43",
        "type": "hue-group",
        "z": "8f5b891c.995788",
        "name": "bed",
        "bridge": "14f26699.674e91",
        "groupid": "1",
        "colornamer": true,
        "skipevents": true,
        "universalevents": false,
        "x": 830,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "49ef72e0.9fdcf4",
        "type": "debug",
        "z": "8f5b891c.995788",
        "name": "bed-alarm-false",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 660,
        "wires": []
    },
    {
        "id": "13c840a3.5710cf",
        "type": "debug",
        "z": "8f5b891c.995788",
        "name": "bed-run",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 720,
        "wires": []
    },
    {
        "id": "aca83b64.9815b8",
        "type": "hue-bridge-node",
        "z": "6b7921f0.fcfa08",
        "name": "",
        "bridge": "14f26699.674e91",
        "autoupdates": true,
        "skipglobalevents": false,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "bf9df606.f67268"
            ]
        ]
    },
    {
        "id": "bf9df606.f67268",
        "type": "function",
        "z": "6b7921f0.fcfa08",
        "name": "filter",
        "func": "\nvar light = msg.updated && msg.updated.type === \"group\";\nvar dimmer = msg.updated && msg.updated.type === \"switch\";\nvar init = msg.payload && msg.payload.ipAddress;\nvar trigger1 = msg.groups && msg.groups.length;\n\nif( light || init || dimmer || trigger1){\n    \n    if( trigger1 ){\n        msg.payload = msg.groups.map(function(x){\n            \n            delete x.action.attributes.alert;\n            var bri = Math.round(x.action.attributes.bri / 254 * 100);\n            \n            return {\n                name: x.attributes.attributes.name,\n                kind: x.attributes.attributes.class,\n                on: x.action.attributes.on,\n                per: bri,\n                state: x.action.attributes\n            };\n        });\n    }\n    \n    return [null, msg];\n}\n\nreturn [msg, null];\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "839c7340.59cf88",
        "type": "subflow:6b7921f0.fcfa08",
        "z": "8f5b891c.995788",
        "name": "",
        "x": 300,
        "y": 60,
        "wires": [
            [
                "3ba6a5f3.29331a"
            ]
        ]
    },
    {
        "id": "8f177c30.99dc18",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "input",
        "func": "\nvar def = {\n    sequence: [5, 10, 20]\n};\n\nvar temp = {};\nfor(var p in def){\n    if( typeof(msg.payload[p]) === 'undefined' ){\n        temp[p] = def[p];\n    }\n}\n\nmsg.payload = temp;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 680,
        "wires": [
            [
                "67c5bd23.678f84"
            ]
        ]
    },
    {
        "id": "8bcd05e5.ebf1c8",
        "type": "http in",
        "z": "8f5b891c.995788",
        "name": "P /api/hue/alarm",
        "url": "/api/hue/alarm",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 680,
        "wires": [
            [
                "8f177c30.99dc18",
                "c5b4b2fe.90ea58"
            ]
        ]
    },
    {
        "id": "da69fbd8.61f83",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "bed-run",
        "func": "\nvar temp = msg.payload;\nnode.warn(temp.sequence);\n\nfor(var i=0; i<temp.sequence.length; i++){\n    \n    var x = temp.sequence[i];\n    var obj = {};\n    obj.payload = {\n      brightness: x,\n      transitionTime: 3\n    };\n    \n    obj.delay = i * 10 * 1000;\n    node.warn(obj)\n    node.send(obj);\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 700,
        "wires": [
            [
                "a8e84a10.69dd58"
            ]
        ]
    },
    {
        "id": "a8e84a10.69dd58",
        "type": "delay",
        "z": "8f5b891c.995788",
        "name": "",
        "pauseType": "delayv",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 680,
        "y": 740,
        "wires": [
            [
                "ca10b6eb.76f43",
                "13c840a3.5710cf"
            ]
        ]
    },
    {
        "id": "87ad5bc3.c36c3",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-bri-60",
        "props": [
            {
                "p": "payload.brightness",
                "v": "60",
                "vt": "num"
            },
            {
                "p": "payload.transitionTime",
                "v": "3",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 420,
        "y": 420,
        "wires": [
            [
                "2e135ab4.199db6"
            ]
        ]
    },
    {
        "id": "d3867896.fbe57",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "07:00 Work",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 130,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "3156aae1.340056",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "hue-bed-alarm",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.2:1880/api/hue/alarm",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 380,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "c5b4b2fe.90ea58",
        "type": "http response",
        "z": "8f5b891c.995788",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 330,
        "y": 720,
        "wires": []
    },
    {
        "id": "bb462a35.3ac41",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-off-2",
        "props": [
            {
                "p": "payload.on",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 800,
        "wires": [
            [
                "1e41eb27.1f0d6d"
            ]
        ]
    },
    {
        "id": "1e41eb27.1f0d6d",
        "type": "delay",
        "z": "8f5b891c.995788",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 320,
        "y": 800,
        "wires": [
            [
                "1af6dcb4.4bbdeb"
            ]
        ]
    },
    {
        "id": "1af6dcb4.4bbdeb",
        "type": "hue-group",
        "z": "8f5b891c.995788",
        "name": "bed",
        "bridge": "14f26699.674e91",
        "groupid": "1",
        "colornamer": true,
        "skipevents": true,
        "universalevents": false,
        "x": 490,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "681d35f9.f6a2a4",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "healthcheck 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9c21b4fe.5495a",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "msg-discord",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 730,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "b4d418d5.7538a8",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "08:10 Weekend",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "10 08 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 150,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "1e1e7701.c4f781",
        "type": "function",
        "z": "b2184ca7.59e64",
        "name": "homepi.log",
        "func": "\nvar log_file = \"homepi.log\";\nvar log_dir = global.get('log_dir');\n\nvar date = new Date();\nmsg.payload = date.toISOString(); \n\nif(msg.level)\n    msg.payload += ` [${msg.level}]`;\n\nif(msg.topic)\n    msg.payload += \" >> \" + msg.topic;\n\nif(msg.listname)\n    msg.payload += \" :: \" + msg.listname;\n\nif(msg.device)\n    msg.payload += \" (\" + msg.device + \")\";\n\nif(msg.detail)\n    msg.payload += \" = \" + msg.detail;\n\nmsg.filename = log_dir + '/' + log_file;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 196.50001525878906,
        "y": 84.6666488647461,
        "wires": [
            [
                "6ba6470.aac15b8"
            ]
        ]
    },
    {
        "id": "6ba6470.aac15b8",
        "type": "file",
        "z": "b2184ca7.59e64",
        "name": "homepi.log",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 377.5,
        "y": 84.3333511352539,
        "wires": [
            []
        ]
    },
    {
        "id": "1f548732.360951",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "(22:00) cov",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "detail",
                "v": "start",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "covid/check",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1200,
        "wires": [
            [
                "631da00d.db099",
                "b5fc41a3.7a634"
            ]
        ]
    },
    {
        "id": "631da00d.db099",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "cov-req",
        "func": "\nvar COUNTRY = 'FI';\nvar BASE_URL = 'https://corona-api.com';\n\nmsg.method = 'GET';\nmsg.url = `${BASE_URL}/countries/${COUNTRY}`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 1240,
        "wires": [
            [
                "9e9925e5.72b6d8"
            ]
        ]
    },
    {
        "id": "719a126d.5c5b3c",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "cov-fmt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9e9925e5.72b6d8",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "http",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 1200,
        "wires": [
            [
                "d22cf537.e7c67",
                "827a72d8.de2df8"
            ]
        ]
    },
    {
        "id": "d22cf537.e7c67",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "cov-fmt",
        "func": "\n// ## config\nvar DAYS = 10;\n\n// ## func\nvar calcRate = function(num, pop){\n    var k = 100;\n    return (k * num / pop);\n};\nvar roundDecimal = function(num, places){\n    if( typeof(places) === 'undefined' ){\n        places = 2;\n    }\n    var g = Math.pow(10, places);\n    return Math.round( num * g ) / g;\n};\n\n// ## flow\nvar result = msg.payload.data;\n\n// format\ndelete result.coordinates;\nresult.timeline = result.timeline.slice(0, DAYS); // ten last\n\n// calculate\nvar timeline = result.timeline;\nvar confirmedList = timeline.map(x => x.new_confirmed);\nvar period_confirmed = confirmedList.reduce((a,b)=>a+b);\nvar rate_all = calcRate(result.latest_data.confirmed, result.population);\nvar rate_period = calcRate(period_confirmed, result.population);\nvar active = (\n    result.latest_data.confirmed \n    - result.latest_data.deaths\n    - result.latest_data.recovered\n);\n\nvar changeArray = [];\nfor(var i=0; i<timeline.length-1; i++){\n    var t = timeline[i];\n    var prev = timeline[i+1]\n    changeArray.push(t.confirmed - prev.confirmed);\n}\nchangeArray = changeArray.reverse();\nvar sum = changeArray.reduce((a, b) => a + b, 0);\nvar avg = (sum / changeArray.length) || 0;\n\nresult.report = {\n    ts: result.updated_at,\n    cases: result.latest_data.confirmed,\n    active: active,\n    today: timeline[0].new_confirmed,\n    rate_all: roundDecimal(rate_all),\n    rate_period: roundDecimal(rate_period),\n    change_avg: roundDecimal(avg),\n    change_line: changeArray\n};\n\nmsg.detail = [\n    result.report.today, \n    result.report.active, \n    result.report.cases\n].join(' / ');\nmsg.payload = result.report;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1240,
        "wires": [
            [
                "719a126d.5c5b3c",
                "627f829a.c52ef4",
                "87da650b.1c6e2"
            ]
        ]
    },
    {
        "id": "827a72d8.de2df8",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "cov-req",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1160,
        "wires": []
    },
    {
        "id": "627f829a.c52ef4",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "cov-push",
        "func": "\n// ## config\nvar LIMIT_DAY = 3;\nvar LIMIT_CASES = 2500;\nvar LIMIT_ACTIVE = 1400;\nvar LIMIT_RATE = 3.00;\n\n// ## flow\nvar report = msg.payload;\nvar prev = global.get('cov-report');\nglobal.set('cov-latest', report);\n\nmsg.payload = Object.assign({}, report);\n\nif( !prev ){\n    global.set('cov-report', report);\n    return [msg, null];\n}\n\nvar date1 = new Date(report.ts);\nvar date2 = new Date(prev.ts);\nvar dateDiff = (date1 - date2) / (24 * 60 * 60 * 1000);\nreport.dateDiff = Math.round(dateDiff);\n\nif( dateDiff >= LIMIT_DAY){\n    global.set('cov-report', report);\n    msg.payload.reason = 'date = ' + Math.round(dateDiff);\n    return [null, msg];\n}\n\nvar casesDiff = report.cases - prev.cases;\nif( casesDiff >= LIMIT_CASES ){\n    global.set('cov-report', report);\n    msg.payload.reason = 'cases = ' + casesDiff;\n    return [null, msg];\n}\n\nvar activeDiff = report.active - prev.active;\nvar activeDiffAbs = Math.abs(activeDiff);\nif( activeDiffAbs >= LIMIT_ACTIVE ){\n    global.set('cov-report', report);\n    msg.payload.reason = 'active = ' + activeDiff;\n    return [null, msg];\n}\n\nif( report.rate_all >= LIMIT_RATE ){\n    global.set('cov-report', report);\n    msg.payload.reason = 'rate_all = ' + report.rate_all;\n    return [null, msg];\n}\n\nreturn [msg, null];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1200,
        "wires": [
            [],
            [
                "ee745fd5.294fd8"
            ]
        ]
    },
    {
        "id": "ee745fd5.294fd8",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "prep-http",
        "func": "\nmsg.url = 'localhost:1880/api/msg';\nmsg.method = 'POST';\nvar body = {\n    msg: msg.payload\n};\n\nmsg.payload = body;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1240,
        "wires": [
            [
                "c6842115.9cfc98"
            ]
        ]
    },
    {
        "id": "c6842115.9cfc98",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "http",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 950,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "b5fc41a3.7a634",
        "type": "subflow:b2184ca7.59e64",
        "z": "95c0351f.c8f748",
        "x": 280,
        "y": 1180,
        "wires": []
    },
    {
        "id": "a2e84188.816",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "cov-outdate",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1300,
        "wires": [
            [
                "46d7cdc1.80ac34"
            ]
        ]
    },
    {
        "id": "46d7cdc1.80ac34",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "set-ts",
        "func": "\nvar report = global.get('cov-report') || {};\n\nvar date = new Date();\ndate.setDate(date.getDate() - 5); // 5 days ago\nreport.ts = date.toISOString();\n\nglobal.set('cov-report', report);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "87da650b.1c6e2",
        "type": "subflow:b2184ca7.59e64",
        "z": "95c0351f.c8f748",
        "x": 700,
        "y": 1280,
        "wires": []
    },
    {
        "id": "879e0177.60848",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "1 hour interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 7-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "net-info",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 1420,
        "wires": [
            [
                "599c0228.eea8c4"
            ]
        ]
    },
    {
        "id": "1977a13d.067887",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "net-fmt",
        "func": "\n// ## dep\nvar redis = global.get('redis');\n\n// ## config\nvar ipTable = {\n    '192.168.1.2': \"HomePi - Hub\", // WiFi\n    '192.168.1.3': \"HomePi - Kodi\", // Cable\n    '192.168.1.4': 'PlayStation 4', // WiFi\n    '192.168.1.5': 'PlayStation 4' // Cable\n};\nvar macTable = {\n    'B8:8A:EC:C7:5D:E4': 'Nintendo Switch', // WiFi\n    \"F8:59:71:7D:71:CA\": \"ThinkPad Work\", // WiFi\n    'C8:FF:77:4F:22:F3': 'Dyson Purifier', // WiFi\n    '1C:D6:BE:53:5B:1F': \"BRAVIA 4K\" // WiFi\n};\n\n// ## flow\nvar input = msg.payload.split(\"Nmap scan\");\n\nvar list = input.filter(function(x){\n   return (\n        x.includes(\"report\")\n        && !x.includes('(192.168.1.1)')\n    );\n}).map(function(x){\n    return x.replace('report for ', '').replace(\"\\n\", \" \").trim();\n});\n\nvar parsed = list.map(function(x){\n    \n    var obj = {name: '', ip: '', mac: ''};\n    \n    var sp = x.split(' ');\n    if( sp[1].includes('(') ){\n        obj.name = sp[0];\n        obj.ip = sp[1].replace('(', '').replace(')', '');\n    }\n    else {\n        obj.ip = sp[0];\n    }\n    \n    var lookmac = x.indexOf('MAC Address: ');\n    if( lookmac > -1 ){\n        lookmac += 13;\n        obj.mac = x.substring(lookmac, lookmac+17);\n    }\n    \n    if( ipTable[obj.ip] ){\n        obj.name = ipTable[obj.ip];\n    }\n    if( macTable[obj.mac] ){\n        obj.name = macTable[obj.mac];\n    }\n    \n    return obj;\n});\n\nvar date = new Date();\nvar result = {\n    ts: date.toISOString(),\n    list: parsed\n};\n\nmsg.payload = result;\nawait redis.set('cron:net', JSON.stringify(result));\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1420,
        "wires": [
            [
                "aaa6ff2a.5dba4"
            ]
        ]
    },
    {
        "id": "aaa6ff2a.5dba4",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "net-fmt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1440,
        "wires": []
    },
    {
        "id": "599c0228.eea8c4",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "sudo nmap -sn 192.168.1.0/24",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "60",
        "oldrc": false,
        "name": "nmap",
        "x": 270,
        "y": 1480,
        "wires": [
            [
                "1977a13d.067887",
                "36f7b441.ff7184"
            ],
            [
                "36f7b441.ff7184"
            ],
            []
        ]
    },
    {
        "id": "36f7b441.ff7184",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "net-raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1460,
        "wires": []
    },
    {
        "id": "dfa14aa0.cf8fe8",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "2 min",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/2 6-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "cc7872ac.a2fe78"
            ]
        ]
    },
    {
        "id": "cc7872ac.a2fe78",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "groups",
        "func": "\nmsg.payload = {\n    fetch: 'groups'\n};\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 100,
        "wires": [
            [
                "2b30399.8e30346"
            ]
        ]
    },
    {
        "id": "2b30399.8e30346",
        "type": "subflow:6b7921f0.fcfa08",
        "z": "8f5b891c.995788",
        "name": "",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "5910ca25.fb633c"
            ]
        ]
    },
    {
        "id": "4f9523ea.8ec194",
        "type": "debug",
        "z": "8f5b891c.995788",
        "name": "hue groups",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "e6fd0f08.a25978",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "save-redis",
        "func": "\nif( !msg.payload || !msg.payload.length ){\n    return false;\n}\n\nvar redis = global.get('redis');\nvar date = new Date();\nvar obj = {\n    rows: msg.payload,\n    ts: date.toISOString()\n};\n\nawait redis.set('cron:hue:groups', JSON.stringify(obj));\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 100,
        "wires": [
            [
                "4f9523ea.8ec194"
            ]
        ]
    },
    {
        "id": "b959e9db.284218",
        "type": "link in",
        "z": "8f5b891c.995788",
        "name": "update-hue-groups",
        "links": [
            "9fcee679.a902c8",
            "1b26f1f4.93d96e",
            "79152b95.8174fc",
            "e395a8c6.22311"
        ],
        "x": 155,
        "y": 140,
        "wires": [
            [
                "cc7872ac.a2fe78"
            ]
        ]
    },
    {
        "id": "86fa2f0.1ef52d",
        "type": "inject",
        "z": "d7018fa3.0ba5c8",
        "name": "on-start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "load/bot",
        "payload": "bot loaded",
        "payloadType": "str",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "9abc3023.5876b8"
            ]
        ]
    },
    {
        "id": "9abc3023.5876b8",
        "type": "function",
        "z": "d7018fa3.0ba5c8",
        "name": "dict",
        "func": "var actionMap = [{\n    name: 'ssh',\n    terms: ['cmd', 'exec', 'ssh'],\n    words: ['ls', 'cat', 'pwd', 'tail'],\n    target: 'exec',\n    pre: function(arg){\n        arg.payload = arg.input.replace('cmd ', '');\n        arg.payload = arg.payload.replace('exec ', '');\n        arg.payload = arg.payload.replace('ssh ', '');\n    }\n    // post - optional formatting\n},{\n    name: 'rsswatch',\n    terms: ['rss', 'get watch', 'watchlist', 'rss watch'],\n    target: 'http',\n    opts: {\n        url: '127.0.0.1:1880/db/red_db/rss_list'\n    },\n    post: function(arg){\n        var raw = arg.payload;\n        var lines = [];\n        \n        for(var p in raw){\n            lines.push('==' + p + '==');\n            for(var s in raw[p]){\n                lines.push(s + ' - ' + raw[p][s]);\n            }\n        }\n        \n        arg.payload = lines.join(\"\\n\");\n        return arg;\n    }\n},{\n    name: 'rssinform',\n    terms: ['rss last', 'get inform', 'rss inform'],\n    target: 'http',\n    opts: {\n        url: '127.0.0.1:1880/db/red_db/rss_inform'\n    }\n    // pre - optional\n    // post - optional formatting\n},{\n    name: 'ownstatus',\n    terms: ['status', 'diagnostics', 'ram'],\n    target: 'http',\n    opts: {\n        url: 'http://192.168.1.2:1880/api/status'\n    },\n    post: function(arg){\n        var body = arg.payload;\n        var arr = body.rows.map(function(x){\n            x.ram = x.ram.p;\n            x.sd = x.sd.p;\n            return x;\n        });\n        \n        arg.payload = arr;\n        return arg;\n    }\n},{\n    name: 'greet',\n    terms: ['hi', 'are you there', 'hello'],\n    answer: ['Hello', 'At your service']\n},{\n    name: 'howareyou',\n    terms: ['whats up', 'how are you', 'what up', 'how is it going'],\n    answer: ['Fine', 'Good']\n},{\n    name: 'dropbills',\n    terms: ['bills', 'next bill'],\n    target: 'http',\n    opts: {\n        url: '127.0.0.1:1880/db/red_db/bills'\n    },\n    post: function(arg){\n        arg.payload.rows.map(function(x){\n            x.date = x.d + '/' + x.m;\n            if( x.y ){\n                x.date += '/' + x.y;\n            }\n            \n            ['date_str', 'm', 'd', 'y'].forEach(function(a){\n               delete x[a]; \n            });\n            \n            return x;\n        });\n        \n        return arg;\n    }\n},{\n    name: 'pilog',\n    terms: ['log', 'logs', 'last run', 'last events'],\n    target: 'exec',\n    pre: function(arg){\n        var filePath = global.get('log_dir') + 'homepi.log';\n        var limit = 10;\n        \n        var inputWords = arg.input.split(' ');\n        var lastWord = inputWords[inputWords.length-1]\n        if( inputWords.length > 1 && !isNaN(lastWord) ){\n            var num = Number(lastWord);\n            if( num > 1 && num < 50 ){\n                limit = num;\n            }\n        }\n        \n        arg.payload = ['tail -n', limit, filePath].join(' ');\n        return arg;\n    }\n    // post - optional formatting\n},{\n    name: 'help',\n    terms: ['help', 'commands'],\n    // words - optional keywords\n    target: 'none',\n    post: function(arg){\n        var list = global.get('botActions');\n        arg.payload = list.map(function(x){\n            return (\n                x.name \n                + ' (' + x.target + \") - \"\n                + x.terms.join(' / ')\n            ); \n        }).join(\"\\n\");\n        return arg;\n    }\n    // post - optional formatting\n},{\n    name: 'network',\n    terms: ['network', 'devices'],\n    words: ['device'],\n    target: 'http',\n    opts: {\n        url: '192.168.1.2:1880/api/cache/cron:net'\n    }\n    // post - optional formatting\n},{\n    name: 'tvon',\n    terms: ['tv on', 'switch tv on'],\n    target: 'http',\n    opts: {\n        method: 'POST',\n        url: '127.0.0.1:1880/api/tv',\n        body: {cmd: 'on'}\n    },\n    words: ['watch'],\n    answer: ['Ok', 'Will do', 'Turning On']\n},{\n    name: 'tvoff',\n    terms: ['tv off', 'switch tv off'],\n    target: 'http',\n    opts: {\n        method: 'POST',\n        url: '127.0.0.1:1880/api/tv',\n        body: {cmd: 'off'}\n    },\n    words: ['shut', 'shutdown'],\n    answer: ['Ok', 'Will do', 'Turning Off']\n},{\n    name: 'tvstate',\n    terms: ['tv status', 'tv state'],\n    target: 'http',\n    opts: {\n        method: 'GET',\n        url: '127.0.0.1:1880/api/tv'\n    },\n    post: function(arg){\n        /*devices: array\n        physical: \"0.0.0.0\"\n        power: \"STANDBY\"\n        osdname: \"Digital TV\"\n        */\n        arg.payload.devices = arg.payload.devices.map(function(x){\n            return (\n                x.osdname + ' - ' + x.power \n                + ' (' + x.physical + ')'\n            );\n        });\n        return arg;\n    },\n    words: ['is', 'does']\n},{\n    name: 'tvchangeinput',\n    terms: ['change tv to <1>', 'switch to <1>'],\n    args: [{\n        ind: 1,\n        'enum': ['tv', 'cast', 'kodi'] \n    }],\n    pre: function(arg){\n        var source = arg.action.inputArgs[0];\n        arg.action.opts.body.cmd += ' ' + source;\n        return arg;\n    },\n    target: 'http',\n    opts: {\n        method: 'POST',\n        url: '127.0.0.1:1880/api/tv',\n        body: {cmd: 'source'}\n    },\n    words: ['input', 'source', 'cast', 'kodi'],\n    answer: ['Ok', 'Will do', 'Switching']\n},{\n    name: 'tvoffdelay',\n    terms: ['tv off after <1> <2>', 'switch tv off in <1> <2>'],\n    target: 'http',\n    args: [1, 2],\n    pre: function(arg){\n        var num = arg.action.inputArgs[0];\n        var units = arg.action.inputArgs[1];\n        var result = num * 1000;\n        \n        if( units.includes('hour') ){\n            result = result * 60 * 60;\n        }\n        if( units.includes('minute') ){\n            result = result * 60;\n        }\n        \n        arg.action.opts.body.cmd += ' ' + result;\n        return arg;\n    },\n    opts: {\n        method: 'POST',\n        url: '127.0.0.1:1880/api/tv',\n        body: {cmd: 'off'}\n    },\n    words: ['shut', 'shutdown', 'minutes', 'hours', 'seconds'],\n    answer: ['Ok', 'Will do', 'Scheduled']\n},{\n    name: 'tvondelay',\n    terms: ['tv on after <1> <2>', 'switch tv on in <1> <2>', 'start tv in <1> <2>'],\n    target: 'http',\n    args: [1, 2],\n    pre: function(arg){\n        var num = arg.action.inputArgs[0];\n        var units = arg.action.inputArgs[1];\n        var result = num * 1000;\n        \n        if( units.includes('hour') ){\n            result = result * 60 * 60;\n        }\n        if( units.includes('minute') ){\n            result = result * 60;\n        }\n        \n        arg.action.opts.body.cmd += ' ' + result;\n        return arg;\n    },\n    opts: {\n        method: 'POST',\n        url: '127.0.0.1:1880/api/tv',\n        body: {cmd: 'on'}\n    },\n    words: ['watch', 'minutes', 'hours', 'seconds'],\n    answer: ['Ok', 'Will do', 'Scheduled']\n},{\n    name: 'covidstat',\n    terms: ['covid stats', 'corona state'],\n    pre: function(arg){\n        arg.payload = global.get('cov-latest');\n        return arg;\n    }\n},{\n    name: 'reminder',\n    terms: ['remind me <1> in <2> <3>'],\n    words: [\n        'reminder', 'after', \n        \"hours\", 'minutes', 'seconds',\n        'tomorrow'\n    ],\n    args: [1, 2, 3],\n    answer: ['Ok', 'Will do', 'Scheduled'],\n    target: 'http',\n    opts: {\n        method: 'POST',\n        url: '192.168.1.2:1880/api/reminder',\n        body: {}\n    },\n    pre: function(arg){\n        \n\t\tvar del = arg.action.inputArgs[0]; // in,after\n        var num = arg.action.inputArgs[1]; // 10\n        var units = arg.action.inputArgs[2]; // hours, tomorrow\n        \n        var result = num;\n        var input = arg.input;\n\t\tvar timeObj = {};\n\t\t\n\t\tvar getFutureDate = function(d, f){\n\t\t\tvar date = new Date();\n\t\t\tvar fut = new Date();\n\t\t\t\n\t\t\tfut.setHours(9);\n            fut.setMinutes(0);\n            fut.setSeconds(0);\n\t\t\t\n\t\t\tfut.setDate(fut.getDate() + d);\n\t\t\t\n            return {\n\t\t\t\ttarget: fut,\n\t\t\t\tdelay: fut - date\n\t\t\t};\n\t\t};\n        \n        if( units === 'tomorrow' ){\n            timeObj = getFutureDate(1);\n            result = timeObj.delay;\n\t\t\t\n            input = input.replace('tomorrow', '');\n        }\n\t\telse if( units === 'week' && num === 'next' ){\n\t\t\ttimeObj = getFutureDate(7);\n            result = timeObj.delay;\n\t\t\t\n\t\t\tinput = input.replace('next week', '');\n\t\t}\n        else {\n            if( units.includes('hour') ){\n                result = result * 60 * 60;\n            }\n            if( units.includes('minute') ){\n                result = result * 60;\n            }\n            \n\t\t\ttimeObj.delay = result;\n\t\t\ttimeObj.target = ( (new Date()) + timeObj.delay );\n\t\t\t\n            var sp = input.split(' ' + del + ' ');\n            input = sp[0];\n        }\n\n        if( input.includes('reminder') ){\n            input = input.split('reminder')[1];\n        }\n        if( input.includes('remind me') ){\n            input = input.split('remind me')[1];\n        }\n        if( input.includes('remind') ){\n            input = input.split('remind')[1];\n        }\n        \n        arg.action.target = timeObj.target;\n        arg.action.opts.body.delay = result;\n        arg.action.opts.body.payload = input.trim();\n        return arg;\n    }\n},{\n    name: 'indoor',\n    terms: [],\n    words: ['indoor', 'room', 'temperature'],\n    target: 'http',\n    opts: {\n        url: 'http://192.168.1.2:1880/api/temp'\n    },\n    post: function(arg){\n        var body = arg.payload;\n        arg.payload = body.rows[0];\n        arg.payload.temperature = arg.payload.cal;\n        delete arg.payload.cal;\n        \n        return arg;\n    }\n},{\n    name: 'delay',\n    terms: ['delay <1>'],\n    delay: true,\n    target: 'talk',\n    args: ['1'],\n    answer: ['delay debug']\n}];\n\nmsg.payload = actionMap;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 80,
        "wires": [
            [
                "6bdfbf2e.48d8d"
            ]
        ]
    },
    {
        "id": "36963c24.309d14",
        "type": "debug",
        "z": "d7018fa3.0ba5c8",
        "name": "bot-load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 80,
        "wires": []
    },
    {
        "id": "6bdfbf2e.48d8d",
        "type": "function",
        "z": "d7018fa3.0ba5c8",
        "name": "bot-index",
        "func": "\nvar map = msg.payload;\nvar ind = {};\nvar kind = {};\nvar nameUnique = {};\nvar stopWords = [\n    'a', 'are', 'an', 'the', '<1>', '<2>', '<3>'\n];\n\nvar wordsCount = 0;\n\nmap.forEach(function(a){\n    \n    if( !a.target ){\n        a.target = 'none';\n    }\n    if( typeof(kind[a.target]) === 'undefined' ){\n        kind[a.target] = 0;\n    }\n    kind[a.target] += 1;\n    \n    if( !nameUnique[a.name] ){\n        nameUnique[a.name] = 1;\n    }\n    else{\n        node.warn('name Duplicate = ' + a.name);\n    } \n    \n    if( !a.words ){\n        a.words = [];\n    }\n    \n    a.terms.forEach(function(t){\n        if( ind[t] ){\n            node.warn(\"Bot.index - duplicate term = \" + t);\n        }\n        ind[t] = a;\n        \n        var tokens = t.split(' ').filter(function(tok){\n           return !stopWords.includes(tok); \n        });\n        a.words = a.words.concat( tokens );\n    });\n    \n    a.words = a.words.filter(function(item, pos) {\n        return a.words.indexOf(item) === pos;\n    });\n    wordsCount += a.words.length;\n});\n\nglobal.set('botActions', map);\nglobal.set('botIndex', ind);\n\nmsg.payload = 'Bot actions = ' + map.length;\nmsg.payload += \" / Terms = \" + Object.keys(ind).length;\nmsg.payload += \" / Words = \" + wordsCount;\nmsg.payload += \" / Kind = \" + JSON.stringify(kind);\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "36963c24.309d14"
            ]
        ]
    },
    {
        "id": "efe39a6d.6f37c8",
        "type": "http in",
        "z": "8f5b891c.995788",
        "name": "P /api/hue",
        "url": "/api/hue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 940,
        "wires": [
            [
                "53b9f2a.929718c",
                "79d807.15817ff8"
            ]
        ]
    },
    {
        "id": "53b9f2a.929718c",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "parse",
        "func": "\nvar colorMap = {\n    'normal': 369,\n    'rest': 443\n};\n\n// room / state( on, bri, color)\nvar obj = msg.payload;\n\nmsg.room = obj.room;\nmsg.payload = obj.state;\n\nvar defTran = ( !obj.state.transitionTime\n    && (obj.state.bri || obj.state.color) );\nif( defTran ){\n    msg.payload.transitionTime = 2;\n}\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 940,
        "wires": [
            [
                "74041131.9b869",
                "6c805ac0.08a67c"
            ]
        ]
    },
    {
        "id": "f26a3d2.5e2c8c",
        "type": "hue-group",
        "z": "8f5b891c.995788",
        "name": "bed",
        "bridge": "14f26699.674e91",
        "groupid": "1",
        "colornamer": true,
        "skipevents": false,
        "universalevents": false,
        "x": 640,
        "y": 920,
        "wires": [
            [
                "e395a8c6.22311"
            ]
        ]
    },
    {
        "id": "74041131.9b869",
        "type": "http response",
        "z": "8f5b891c.995788",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 420,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4d92f44c.5e810c",
        "type": "hue-group",
        "z": "8f5b891c.995788",
        "name": "kid",
        "bridge": "14f26699.674e91",
        "groupid": "2",
        "colornamer": true,
        "skipevents": false,
        "universalevents": false,
        "x": 640,
        "y": 1000,
        "wires": [
            [
                "e395a8c6.22311"
            ]
        ]
    },
    {
        "id": "37c05f91.d65b78",
        "type": "hue-group",
        "z": "8f5b891c.995788",
        "name": "living",
        "bridge": "14f26699.674e91",
        "groupid": "3",
        "colornamer": true,
        "skipevents": false,
        "universalevents": false,
        "x": 640,
        "y": 960,
        "wires": [
            [
                "e395a8c6.22311"
            ]
        ]
    },
    {
        "id": "6c805ac0.08a67c",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "switch",
        "func": "\nvar r = msg.room;\n\nif( ['bed', 'Bedroom' ].includes(r) ){\n    return [msg];\n}\nif( ['living' ].includes(r) ){\n    return [null, msg];\n}\nif( ['kid' ].includes(r) ){\n    return [null, null, msg];\n}\n\nif( r === 'bed-living' ){\n    return [msg, msg, null];\n}\nif( r === 'all' ){\n    return [msg, msg, msg];\n}\n\nreturn null;\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 940,
        "wires": [
            [
                "f26a3d2.5e2c8c"
            ],
            [
                "37c05f91.d65b78"
            ],
            [
                "4d92f44c.5e810c"
            ]
        ]
    },
    {
        "id": "79d807.15817ff8",
        "type": "debug",
        "z": "8f5b891c.995788",
        "name": "P hue",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 900,
        "wires": []
    },
    {
        "id": "e06aa626.f48098",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "bed-colorTemp-normal",
        "props": [
            {
                "p": "payload.colorTemp",
                "v": "369",
                "vt": "num"
            },
            {
                "p": "payload.transitionTime",
                "v": "3",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 680,
        "y": 360,
        "wires": [
            [
                "2e135ab4.199db6"
            ]
        ]
    },
    {
        "id": "c27abfe6.4c23b",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "10 minutes",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "77051aaa.c6d9ec",
        "type": "exec",
        "z": "8f5b891c.995788",
        "command": "/home/pi/workbench/homepi/services/xiaomi/run-temp.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "xiaomi-bt",
        "x": 320,
        "y": 1140,
        "wires": [
            [
                "2b00c0ac.237ca8",
                "11a105a0.f9c182"
            ],
            [
                "2b00c0ac.237ca8"
            ],
            []
        ]
    },
    {
        "id": "2b00c0ac.237ca8",
        "type": "debug",
        "z": "8f5b891c.995788",
        "name": "xiaomi",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1160,
        "wires": []
    },
    {
        "id": "11a105a0.f9c182",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "parse",
        "func": "\nvar txt = msg.payload;\nvar sp = txt.split('==');\nvar obj = JSON.parse(sp[1]);\n\nvar date = new Date();\nobj.ts = date.toISOString();\n\nvar redis = global.get('redis');\nawait redis.set('cron:temp:mi', JSON.stringify(obj));\n\nmsg.payload = obj;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1120,
        "wires": [
            [
                "f12ea749.b0e8d"
            ]
        ]
    },
    {
        "id": "f12ea749.b0e8d",
        "type": "debug",
        "z": "8f5b891c.995788",
        "name": "mi-2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1140,
        "wires": []
    },
    {
        "id": "3ba65cd4.789df4",
        "type": "delay",
        "z": "8f5b891c.995788",
        "name": "rate-1",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "e6fd0f08.a25978"
            ]
        ]
    },
    {
        "id": "5910ca25.fb633c",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "flt",
        "func": "\nif( !msg.payload || !msg.payload.length ){\n    return false;\n}\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 100,
        "wires": [
            [
                "3ba65cd4.789df4"
            ]
        ]
    },
    {
        "id": "79152b95.8174fc",
        "type": "link out",
        "z": "8f5b891c.995788",
        "name": "hue-trigger-status-1",
        "links": [
            "b959e9db.284218"
        ],
        "x": 515,
        "y": 240,
        "wires": []
    },
    {
        "id": "e395a8c6.22311",
        "type": "link out",
        "z": "8f5b891c.995788",
        "name": "hue-trigger-status-2",
        "links": [
            "b959e9db.284218"
        ],
        "x": 765,
        "y": 960,
        "wires": []
    },
    {
        "id": "c90d91c4.98c188",
        "type": "exec",
        "z": "e74f2b92.a31178",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "ls db_dir",
        "x": 460,
        "y": 180,
        "wires": [
            [
                "8257cfbe.43522"
            ],
            [],
            []
        ]
    },
    {
        "id": "2d36d1c2.4f9c3e",
        "type": "function",
        "z": "e74f2b92.a31178",
        "name": "dir",
        "func": "\nmsg.payload = 'ls ' + global.get('db_dir');\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 180,
        "wires": [
            [
                "c90d91c4.98c188"
            ]
        ]
    },
    {
        "id": "e29c12ca.ec3178",
        "type": "debug",
        "z": "e74f2b92.a31178",
        "name": "test",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "8257cfbe.43522",
        "type": "function",
        "z": "e74f2b92.a31178",
        "name": "parse",
        "func": "\nvar txt = msg.payload;\nvar list = txt.split(\"\\n\").map(function(x){\n    return x.trim().replace('.json', '');\n}).filter(function(x){\n    return x.length > 0;\n});\n\nmsg.payload = {\n  rows: list,\n  count: list.length\n};\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 180,
        "wires": [
            [
                "eaf2e59d.a8b418",
                "e29c12ca.ec3178"
            ]
        ]
    },
    {
        "id": "5683680b.e6ca1",
        "type": "http request",
        "z": "b49b90bb.306d1",
        "name": "weather",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.1.2:1880/api/db/config/weather_creds",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 460,
        "y": 140,
        "wires": [
            [
                "20664543.f7ba6a"
            ]
        ]
    },
    {
        "id": "1b8ff1d9.61a846",
        "type": "http in",
        "z": "e74f2b92.a31178",
        "name": "G /api/db/:db_name",
        "url": "/api/db/:db_name",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "1287c56f.4109d3"
            ]
        ]
    },
    {
        "id": "1287c56f.4109d3",
        "type": "function",
        "z": "e74f2b92.a31178",
        "name": "dir",
        "func": "\nvar dbName = msg.req.params.db_name;\nmsg.payload = 'ls ' + global.get('db_dir') + '/' + dbName;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "c90d91c4.98c188"
            ]
        ]
    },
    {
        "id": "c8eb86a1.ce5b2",
        "type": "http in",
        "z": "e74f2b92.a31178",
        "name": "G /api/db/:db_name/:id",
        "url": "/api/db/:db_name/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "225ec3e0.2ec3dc"
            ]
        ]
    },
    {
        "id": "225ec3e0.2ec3dc",
        "type": "function",
        "z": "e74f2b92.a31178",
        "name": "dir",
        "func": "\nvar dbName = msg.req.params.db_name;\nvar id = msg.req.params.id;\n\nmsg.filename = global.get('db_dir') + '/' + dbName + '/' + id + '.json';\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "fa6f48ba.aa636"
            ]
        ]
    },
    {
        "id": "fa6f48ba.aa636",
        "type": "file in",
        "z": "e74f2b92.a31178",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 470,
        "y": 240,
        "wires": [
            [
                "6a3998ed.aac19"
            ]
        ]
    },
    {
        "id": "6a3998ed.aac19",
        "type": "json",
        "z": "e74f2b92.a31178",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 240,
        "wires": [
            [
                "eaf2e59d.a8b418"
            ]
        ]
    },
    {
        "id": "4d753dd3.758764",
        "type": "http request",
        "z": "b49b90bb.306d1",
        "name": "trello",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.1.2:1880/api/db/config/trello_apikey",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "f10dc2f9.7b58b8"
            ]
        ]
    },
    {
        "id": "f10dc2f9.7b58b8",
        "type": "function",
        "z": "b49b90bb.306d1",
        "name": "weather-conf",
        "func": "\nglobal.set('trello_conf', msg.payload);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a11dcaef.2f5058",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "Trello (10:00)",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "trello/get",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "00 10 * * *",
        "once": false,
        "topic": "trello/get",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1600,
        "wires": [
            [
                "f6c162c0.4d08a",
                "8c2ece23.0991e8"
            ]
        ]
    },
    {
        "id": "ed57e25e.38e848",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "trello deb 1",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 738.6666717529297,
        "y": 1571.6666564941406,
        "wires": []
    },
    {
        "id": "6e7fe686.d1fa8",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "get_member",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 358.6666717529297,
        "y": 1591.6666564941406,
        "wires": [
            [
                "fa6d9d5d.469c"
            ]
        ]
    },
    {
        "id": "8c2ece23.0991e8",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "List_boards",
        "func": "\nmsg.trello_conf = global.get('trello_conf');\nmsg.url = msg.trello_conf.base_url;\nmsg.url += \"/1/members/me?fields=username&boards=all\";\nmsg.url += \"&board_fields=name,shortUrl&key=\";\n\nmsg.url += msg.trello_conf.key;\nmsg.url += \"&token=\";\nmsg.url += msg.trello_conf.token;\n\nmsg.payload = '';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 245.16668701171875,
        "y": 1640.6666870117188,
        "wires": [
            [
                "6e7fe686.d1fa8"
            ]
        ]
    },
    {
        "id": "fa6d9d5d.469c",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "Filter_Spisok",
        "func": "var list_body = JSON.parse(msg.payload);\n\nvar filtered = list_body.boards.filter(function(el){\n    return el.name == 'Spisok';\n});\n\nmsg.url = msg.trello_conf.base_url;\nmsg.url += \"/1/boards/\";\nmsg.url += filtered[0].id;\nmsg.url += \"/lists?cards=open&card_fields=name&fields=name&key=\";\n\nmsg.url += msg.trello_conf.key;\nmsg.url += \"&token=\";\nmsg.url += msg.trello_conf.token;\n\nmsg.payload = '';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 446.1666717529297,
        "y": 1636.6666870117188,
        "wires": [
            [
                "5736b7a3.abf038"
            ]
        ]
    },
    {
        "id": "5736b7a3.abf038",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "get_boards",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 558.6666717529297,
        "y": 1591.6666564941406,
        "wires": [
            [
                "ed57e25e.38e848",
                "c21040a8.8827d"
            ]
        ]
    },
    {
        "id": "c21040a8.8827d",
        "type": "file",
        "z": "95c0351f.c8f748",
        "name": "W cards",
        "filename": "/home/pi/db/portal/trello_cards.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 728.6666717529297,
        "y": 1631.6666564941406,
        "wires": [
            []
        ]
    },
    {
        "id": "f6c162c0.4d08a",
        "type": "subflow:b2184ca7.59e64",
        "z": "95c0351f.c8f748",
        "x": 328.6666717529297,
        "y": 1551.6666564941406,
        "wires": []
    },
    {
        "id": "d6bb5a3a.c14498",
        "type": "exec",
        "z": "8f5b891c.995788",
        "command": "ps aux |grep bluepy",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "bluepy-bug",
        "x": 330,
        "y": 1220,
        "wires": [
            [
                "de927379.5d4bf8"
            ],
            [],
            []
        ]
    },
    {
        "id": "defc079d.e4d4d",
        "type": "inject",
        "z": "8f5b891c.995788",
        "name": "5 minutes",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1220,
        "wires": [
            [
                "d6bb5a3a.c14498"
            ]
        ]
    },
    {
        "id": "80e0aac7.2f98e",
        "type": "debug",
        "z": "8f5b891c.995788",
        "name": "bluepy-cpu",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1220,
        "wires": []
    },
    {
        "id": "de927379.5d4bf8",
        "type": "function",
        "z": "8f5b891c.995788",
        "name": "parse",
        "func": "\nvar txt = msg.payload;\n\nvar sp = txt.split(\"\\n\")[2]\n    .split(' ').filter(x => x.length > 0);\n\nvar cpu = Number(sp[2]);\nvar pid = sp[1];\n\nmsg.payload = sp;\nif( cpu < 20 || isNaN(cpu) ){\n    return false;\n}\n\nnode.warn(\"blupy-bug - cpu = \" + cpu);\nmsg.payload = pid;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1220,
        "wires": [
            [
                "80e0aac7.2f98e",
                "101142dd.cc56ed"
            ]
        ]
    },
    {
        "id": "101142dd.cc56ed",
        "type": "exec",
        "z": "8f5b891c.995788",
        "command": "sudo kill -9",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "bluepy-kill",
        "x": 640,
        "y": 1260,
        "wires": [
            [
                "e0526bef.7ce298"
            ],
            [
                "e0526bef.7ce298"
            ],
            []
        ]
    },
    {
        "id": "e0526bef.7ce298",
        "type": "debug",
        "z": "8f5b891c.995788",
        "name": "kill-bluepy",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1260,
        "wires": []
    },
    {
        "id": "1bcb63a5.ee9d64",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "RSS (every 2)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "7200",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1740,
        "wires": [
            [
                "d821ab68.7ae68"
            ]
        ]
    },
    {
        "id": "d821ab68.7ae68",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "rss-list",
        "func": "\nvar dict = {\n  \"lostfilm\": \"http://www.lostfilm.tv/rss.xml\",\n  \"rutracker-tv-new\": \"http://feed.rutracker.cc/atom/f/842.atom\",\n  \"rutracker-tv-hd\": \"http://feed.rutracker.cc/atom/f/2366.atom\",\n  \"rutracker-2021\": \"http://feed.rutracker.cc/atom/f/1950.atom\"\n};\n\nObject.keys(dict).forEach(function(x){\n   \n   msg.obj = {\n        k: x,\n        v: dict[x]\n   };\n   msg.url = dict[x];\n   node.send(msg);\n});\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1780,
        "wires": [
            [
                "a23d31c8.31b4f8",
                "e551c296.17c4e8"
            ]
        ]
    },
    {
        "id": "a23d31c8.31b4f8",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "rss-list",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "obj",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1720,
        "wires": []
    },
    {
        "id": "e551c296.17c4e8",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "rss-get",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 430,
        "y": 1780,
        "wires": [
            [
                "28af0d60.2143ba"
            ]
        ]
    },
    {
        "id": "1f457cfd.edc1fb",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "inbox",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1720,
        "wires": []
    },
    {
        "id": "28af0d60.2143ba",
        "type": "xml",
        "z": "95c0351f.c8f748",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 550,
        "y": 1760,
        "wires": [
            [
                "7e99663.4e88118"
            ]
        ]
    },
    {
        "id": "7e99663.4e88118",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "rss-parser",
        "func": "\nif(msg.payload.rss){\n    return [msg, null];\n}\n\nreturn [null, msg];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1720,
        "wires": [
            [
                "ae708315.b7b6f8"
            ],
            [
                "1958ce19.8b16f2"
            ]
        ]
    },
    {
        "id": "ae708315.b7b6f8",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "parse-lost",
        "func": "\nvar xml_set = msg.payload.rss.channel[0].item;\nvar fmt_set = [];\n\nfor(var i in xml_set){\n    fmt_set.push({\n        title: xml_set[i]['title'][0],\n        pubDate: xml_set[i]['pubDate'][0],\n        link: xml_set[i]['link'][0]\n    });\n}\n\nmsg.inbox = fmt_set;\nmsg.listname = 'lostfilm';\nmsg.detail = fmt_set.length + ' got';\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1720,
        "wires": [
            [
                "1f457cfd.edc1fb",
                "6ebc6b64.965004"
            ]
        ]
    },
    {
        "id": "1958ce19.8b16f2",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "parse-rutracker",
        "func": "\nvar xml_set = msg.payload.feed.entry;\nvar fmt_set = [];\n\nfor(var i in xml_set){\n    fmt_set.push({\n        title: xml_set[i]['title'][0],\n        pubDate: xml_set[i]['updated'][0],\n        link: xml_set[i]['link'][0][\"$\"][\"href\"]\n    });\n}\n\nmsg.inbox = fmt_set;\n\n//logging\nvar channel = ( \n    xml_set[0] && xml_set[0].category\n    && xml_set[0].category[0] \n    && xml_set[0].category[0]['$']\n    && xml_set[0].category[0]['$'].label\n);\n\nmsg.listname = 'rutracker';\nif( channel ){\n    msg.listname += ' - ' + channel.substr(0,20);\n}\nmsg.detail = fmt_set.length + ' got';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1760,
        "wires": [
            [
                "1f457cfd.edc1fb",
                "6ebc6b64.965004"
            ]
        ]
    },
    {
        "id": "3b86b4c4.a6fd4c",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "tar -zcf ",
        "addpay": true,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "tar",
        "x": 430,
        "y": 1900,
        "wires": [
            [],
            [
                "55c3972d.005888"
            ],
            []
        ]
    },
    {
        "id": "eb3ac3d2.84fcc",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "BKP red_db",
        "func": "\nvar S_DIR = global.get('db_dir');\nvar bkp_dir = global.get('backup_dir');\nvar ARC_PREFIX = \"db\";\n\n// ## flow\nvar now = new Date();\nvar dateStr = now.toISOString();\nvar ts = dateStr.substring(0, 19).replace(/\\:/g, '');\nts = ts.replace(/\\-/g, '').replace('T', '-');\n\nvar d_file = `${ARC_PREFIX}_${ts}.tar.gz`; \nvar d_path = bkp_dir + d_file;\n\nmsg.payload = `${d_path} -C ${S_DIR} ./`; // C = changeDir\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1880,
        "wires": [
            [
                "ea098386.a7d7",
                "3b86b4c4.a6fd4c"
            ]
        ]
    },
    {
        "id": "4f040430.079f2c",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "(11:00)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 11 * * *",
        "once": false,
        "onceDelay": "",
        "topic": "wrk/bkp",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1860,
        "wires": [
            [
                "eb3ac3d2.84fcc",
                "3cb7417a.99ed9e"
            ]
        ]
    },
    {
        "id": "3cb7417a.99ed9e",
        "type": "subflow:b2184ca7.59e64",
        "z": "95c0351f.c8f748",
        "x": 260,
        "y": 1840,
        "wires": []
    },
    {
        "id": "55c3972d.005888",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "tar-err",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 1900,
        "wires": []
    },
    {
        "id": "ea098386.a7d7",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "tar-cmd",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1860,
        "wires": []
    },
    {
        "id": "e5865e04.d2e2e",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "bkp-rotate",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 2020,
        "wires": []
    },
    {
        "id": "49d743de.845c4c",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "ls -1tr",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "name": "ls bkp",
        "x": 370,
        "y": 1980,
        "wires": [
            [
                "4d69bab7.1588e4"
            ],
            [],
            []
        ]
    },
    {
        "id": "9aa4f56e.95d69",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "rotate-bkp",
        "func": "\nvar BKP_LIMIT = 50;\n\nvar bkp_dir = global.get('backup_dir');\nvar dirList = msg.payload;\nvar newfile = dirList.pop();\n\nvar diff = dirList.length - BKP_LIMIT;\n\nif( diff > 0 ){\n    var todelete = dirList.slice(0, diff);\n    msg = todelete.map(function(x){\n        return {payload: (bkp_dir + x) };\n    });\n    \n    return [msg];\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 2000,
        "wires": [
            [
                "e5865e04.d2e2e",
                "22f45dfb.d6bafa"
            ]
        ]
    },
    {
        "id": "22f45dfb.d6bafa",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "rm ",
        "addpay": true,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "rm bkp",
        "x": 810,
        "y": 1980,
        "wires": [
            [],
            [
                "186fef73.1076c9"
            ],
            []
        ]
    },
    {
        "id": "358603a4.3a78d4",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "ls-bkp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1960,
        "wires": []
    },
    {
        "id": "bf44d88a.db1e38",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "ls-bkp",
        "func": "\nvar bkp_dir = global.get('backup_dir');\n\nmsg.payload = bkp_dir;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 2000,
        "wires": [
            [
                "49d743de.845c4c"
            ]
        ]
    },
    {
        "id": "4d69bab7.1588e4",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "str-arr",
        "func": "\nvar dirList = msg.payload.split(\"\\n\");\nmsg.payload = dirList.filter(function(x){\n    return x.length && x.length > 0;\n});\n\n// for logging\nmsg.detail = msg.payload.length;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 1980,
        "wires": [
            [
                "9aa4f56e.95d69",
                "358603a4.3a78d4",
                "d936abb3.a9fff8"
            ]
        ]
    },
    {
        "id": "186fef73.1076c9",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "rm-bkp",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1980,
        "wires": []
    },
    {
        "id": "5585881a.0cf6e8",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "(11:30)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 11 * * *",
        "once": false,
        "onceDelay": "",
        "topic": "wrk/bkp/rotate",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1980,
        "wires": [
            [
                "bf44d88a.db1e38"
            ]
        ]
    },
    {
        "id": "d936abb3.a9fff8",
        "type": "subflow:b2184ca7.59e64",
        "z": "95c0351f.c8f748",
        "x": 640,
        "y": 2040,
        "wires": []
    },
    {
        "id": "32fb2f99.1a80c8",
        "type": "http in",
        "z": "e74f2b92.a31178",
        "name": "P /api/db/:db_name/:id?",
        "url": "/api/db/:db_name/:id?",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "17df78db.30b41f"
            ]
        ]
    },
    {
        "id": "17df78db.30b41f",
        "type": "function",
        "z": "e74f2b92.a31178",
        "name": "dir",
        "func": "\nvar dbName = msg.req.params.db_name;\nvar id = msg.req.params.id;\n\nmsg.filename = global.get('db_dir') + '/' + dbName + '/' + id + '.json';\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 360,
        "wires": [
            [
                "e215adaa.4c55c"
            ]
        ]
    },
    {
        "id": "e215adaa.4c55c",
        "type": "file",
        "z": "e74f2b92.a31178",
        "name": "f-write",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 490,
        "y": 360,
        "wires": [
            [
                "bbb6bdf6.40b22"
            ]
        ]
    },
    {
        "id": "bbb6bdf6.40b22",
        "type": "http response",
        "z": "e74f2b92.a31178",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 360,
        "wires": []
    },
    {
        "id": "6ebc6b64.965004",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "rss-list",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.1.2:1880/api/db/config/rss_list",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1010,
        "y": 1760,
        "wires": [
            [
                "7cf8ae17.258db",
                "8f6c3384.7c277"
            ]
        ]
    },
    {
        "id": "7cf8ae17.258db",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "filter-wanted",
        "func": "\nvar wanted = msg.payload[msg.listname];\n\nmsg.found = msg.inbox.filter(function(el){\n    for(var k in wanted){\n        var reg_test = new RegExp(wanted[k], \"i\");\n        var titleMatch = el.title.match(reg_test);\n        var linkMatch = el.link.match(reg_test);\n        \n        if(linkMatch || titleMatch){\n            el.label = k;\n            return true;\n        }\n    }\n    return false;\n});\n\ndelete msg.inbox;\n\nif( msg.found.length > 0 ){\n    return [msg, null];\n}\nelse {\n    return [null, msg];\n}\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1760,
        "wires": [
            [
                "88d78a70.dd4018"
            ],
            []
        ]
    },
    {
        "id": "88d78a70.dd4018",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "G rss-ignore",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.1.2:1880/api/db/portal/rss_inform",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1350,
        "y": 1760,
        "wires": [
            [
                "bcbc5005.ae0f6",
                "f9388565.bcf238"
            ]
        ]
    },
    {
        "id": "bcbc5005.ae0f6",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "rss-debug-3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 1720,
        "wires": []
    },
    {
        "id": "8f6c3384.7c277",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "rss-debug-2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 1720,
        "wires": []
    },
    {
        "id": "f9388565.bcf238",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "rss-ignore",
        "func": "\ntry {\n    msg.ignore = JSON.parse(msg.payload);\n} catch (e) {\n    msg.ignore = {};\n}\n\nif(!msg.ignore[msg.listname]){\n    msg.ignore[msg.listname] = [];\n}\nvar ignoreList = msg.ignore[msg.listname];\n\nmsg.found = msg.found.filter(function(el){\n    for(var k in ignoreList){\n        var alreadyReported = (\n            el.link === ignoreList[k].link\n            && el.pubDate === ignoreList[k].pubDate\n        );\n        if(alreadyReported){\n            return false;\n        }\n    }\n    //Update Ignore\n    el.tag = msg.listname;\n    ignoreList.push(el);\n    return true;\n});\n\n//Update Ignore\nmsg.payload = msg.ignore;\nmsg.url = '';\n\nif(msg.found.length > 0){\n    return [msg, null];\n}\nelse {\n    return [null, msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1780,
        "wires": [
            [
                "d9d4b53a.05122",
                "105078e1.6e2fd7",
                "36f40a63.6284d6",
                "8c954544.8062c"
            ],
            []
        ]
    },
    {
        "id": "d9d4b53a.05122",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "rss-debug-4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 1760,
        "wires": []
    },
    {
        "id": "105078e1.6e2fd7",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "P rss-ignoe",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.1.2:1880/api/db/portal/rss_inform",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1690,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "36f40a63.6284d6",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "notify-local",
        "func": "\n// multiple\nvar arr = msg.found.map(function(x){\n    var obj = {};\n    \n    var req_body = {\n        topic: ('rss/available/' + x.label),\n        msg: (\"Available: \" + x.title)\n    };\n    \n    obj.headers = {};\n    obj.url = '192.168.1.2:1880/api/notice';\n    obj.method = 'POST';\n    obj.payload = JSON.stringify(req_body);\n    \n    return obj;\n});\n\nreturn arr;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 1840,
        "wires": [
            [
                "c8eb7315.9eda1"
            ]
        ]
    },
    {
        "id": "8c954544.8062c",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "notify-mobile",
        "func": "\n// multiple\nvar arr = msg.found.map(function(x){\n    var obj = {};\n    \n    var req_body = {\n        msg: (\"New: \" + x.title)\n    };\n    \n    obj.headers = {};\n    obj.url = '192.168.1.2:1880/api/msg';\n    obj.method = 'POST';\n    obj.payload = JSON.stringify(req_body);\n    \n    return obj;\n});\n\nreturn arr;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 1880,
        "wires": [
            [
                "c8eb7315.9eda1"
            ]
        ]
    },
    {
        "id": "c8eb7315.9eda1",
        "type": "delay",
        "z": "95c0351f.c8f748",
        "name": "1-per-2",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1860,
        "y": 1840,
        "wires": [
            [
                "c7a205ce.6b0c5"
            ]
        ]
    },
    {
        "id": "c7a205ce.6b0c5",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "rss-notify-invoke",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2030,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "ffcb9d8c.c42f78",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "09:00 Notice_R",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 09 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "wrk/notice_rotate",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2100,
        "wires": [
            [
                "af7b0b3.566e178",
                "9ba8f67e.b74078"
            ]
        ]
    },
    {
        "id": "af7b0b3.566e178",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "notice-get",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.2:1880/api/db/portal/notice_new",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 320,
        "y": 2100,
        "wires": [
            [
                "c551e502.f4bf18"
            ]
        ]
    },
    {
        "id": "9ba8f67e.b74078",
        "type": "subflow:b2184ca7.59e64",
        "z": "95c0351f.c8f748",
        "x": 320,
        "y": 2060,
        "wires": []
    },
    {
        "id": "c551e502.f4bf18",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "rotate_notice",
        "func": "\nvar DAYS_MAX = 7;\nvar dateNow = new Date();\nvar validityPeriod = 1000 * 60 * 60 * 24 * DAYS_MAX;\nvar dateLimit = new Date(dateNow - validityPeriod);\n\nvar noticeList = [];\ntry{\n    noticeList = JSON.parse(msg.payload);\n} catch(e) {\n    return [ null, msg];\n}\n\nvar validList = noticeList.filter(function(el){\n    //Filtering\n    var logD = new Date(el.time);\n    return (logD > dateLimit) && (el.status === 'new');\n});\n\nmsg.payload = validList;\n\nreturn [msg, null];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2120,
        "wires": [
            [
                "7731a113.8a2948"
            ],
            []
        ]
    },
    {
        "id": "7731a113.8a2948",
        "type": "http request",
        "z": "95c0351f.c8f748",
        "name": "notice-save",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.1.2:1880/api/db/portal/notice_new",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 690,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "18697f5a.d86da9",
        "type": "comment",
        "z": "b49b90bb.306d1",
        "name": "HUB device",
        "info": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "17eda9b9.34ac16",
        "type": "inject",
        "z": "95c0351f.c8f748",
        "name": "07:00 log R",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": "",
        "topic": "log/rotate",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 2180,
        "wires": [
            [
                "280d3417.1eee0c"
            ]
        ]
    },
    {
        "id": "280d3417.1eee0c",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "du -m /home/pi/db/logs/homepi.log",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "oldrc": false,
        "name": "log size",
        "x": 280,
        "y": 2180,
        "wires": [
            [
                "a312b00c.69f8d",
                "430dae7a.f37688"
            ],
            [],
            []
        ]
    },
    {
        "id": "a312b00c.69f8d",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "log_size",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 440,
        "y": 2180,
        "wires": []
    },
    {
        "id": "430dae7a.f37688",
        "type": "function",
        "z": "95c0351f.c8f748",
        "name": "check log",
        "func": "\nvar f_size = msg.payload.split(\"\\t\")[0];\n\nif(f_size > 1){\n    return [msg, null];\n}\nelse{\n    return [null, msg];\n}\n\n",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2220,
        "wires": [
            [
                "a68f974f.e3611"
            ],
            []
        ]
    },
    {
        "id": "a68f974f.e3611",
        "type": "exec",
        "z": "95c0351f.c8f748",
        "command": "rm ~/db/logs/homepi.log2 || mv ~/db/logs/homepi.log ~/db/logs/homepi.log2",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "oldrc": false,
        "name": "log copy",
        "x": 600,
        "y": 2200,
        "wires": [
            [
                "9c4292b1.e35128",
                "bad6f62e.716b5"
            ],
            [],
            []
        ]
    },
    {
        "id": "9c4292b1.e35128",
        "type": "subflow:b2184ca7.59e64",
        "z": "95c0351f.c8f748",
        "x": 780,
        "y": 2220,
        "wires": []
    },
    {
        "id": "bad6f62e.716b5",
        "type": "debug",
        "z": "95c0351f.c8f748",
        "name": "log_copy",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 2180,
        "wires": []
    }
]